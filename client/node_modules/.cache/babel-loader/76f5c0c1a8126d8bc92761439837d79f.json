{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp-u\\\\Desktop\\\\PGR-project\\\\client\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from \"axios\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 18,\n    color: 'black',\n    fontFamily: 'vardana'\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  },\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function Tables({\n  history\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [data, setdata] = useState([]);\n  const [header, setheader] = useState([]);\n  let {\n    id\n  } = useParams();\n  const [loading, setloading] = useState(false);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(function () {\n    const headers = {\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n    setloading(true);\n    axios.get(`http://localhost:9000/users/data/NIFTY`, {\n      headers\n    }).then(res => {\n      setdata(res.data.data[id]);\n      let arr = [];\n      Object.values(res.data.data[id][0]).map((item, index) => arr.push(item));\n      setheader(arr);\n      setloading(false);\n    }).catch(err => {\n      setloading(false);\n      console.log(\"error\");\n    });\n  }, [history.location.pathname]);\n\n  function replace(object) {\n    let newobj = {};\n    Object.values(object).map((item, index) => newobj[header[index]] = item);\n    return newobj;\n  }\n\n  const finalans = [];\n  const rows = header.length > 0 ? data.slice(1).map(item => replace(item)) : [];\n  console.log(data);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '30vh',\n      display: 'flex',\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        width: \"60px\",\n        height: \"60px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 15\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: header.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: header.map((item, index) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                id: index,\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 3\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: header.map((i, subindex) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 20\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Tables, \"3S6YwNRoB212Eg3xhh7iGCwQ1+M=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = Tables;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"sources":["C:/Users/hp-u/Desktop/PGR-project/client/src/components/Table.js"],"names":["React","useEffect","useState","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","CircularProgress","TableRow","Paper","axios","TablePagination","useParams","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","fontFamily","StyledTableRow","root","action","hover","useStyles","table","minWidth","width","container","maxHeight","Tables","history","classes","data","setdata","header","setheader","id","loading","setloading","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","headers","get","then","res","arr","Object","values","map","item","index","push","catch","err","console","log","location","pathname","replace","object","newobj","finalans","rows","length","slice","height","display","justifyContent","alignItems","row","i","subindex"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState}from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from \"axios\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {\r\n  useParams,\r\n} from \"react-router-dom\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 18,\r\n    color:'black',\r\n    fontFamily:'vardana',\r\n      },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n   root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function Tables({history}) {\r\n  const classes = useStyles();\r\n  const [data,setdata]=useState([]);\r\n  const [header,setheader]=useState([]);\r\n let {id} = useParams();\r\nconst [loading,setloading]=useState(false);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\nuseEffect(function(){\r\n   const headers={\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n   }\r\n   setloading(true);\r\n axios.get(`http://localhost:9000/users/data/NIFTY`,{\r\n        headers}).then(\r\n        (res)=>{\r\n          setdata(res.data.data[id]);\r\n          let arr=[];\r\n          Object.values(res.data.data[id][0]).map((item,index) => (\r\n             arr.push(item)\r\n              ))\r\n          setheader(arr);\r\n          setloading(false);\r\n        })\r\n        .catch((err)=>{\r\n          setloading(false);\r\n        console.log(\"error\");\r\n        })\r\n      },[history.location.pathname])    \r\n\r\nfunction replace(object){\r\n  let newobj={};\r\n   Object.values(object).map((item,index) => (\r\n             newobj[header[index]]=item\r\n              ))\r\n  return newobj;\r\n}\r\n\r\n\r\nconst finalans=[];\r\nconst rows = \r\n header.length>0 ? data.slice(1).map((item) => \r\n        replace(item) )\r\n:\r\n[]\r\n;\r\nconsole.log(data);\r\n\r\n  return (\r\n      loading ? (\r\n              <div\r\n                style={{\r\n                  height: '30vh',\r\n                  display: 'flex',\r\n                  width: '100%',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n              <CircularProgress\r\n              style={{width:\"60px\",height:\"60px\"}}\r\n      />\r\n              </div>\r\n            ) : (\r\n              <>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n\r\n            {header.length > 0 ? \r\n            <>\r\n            {header.map((item,index) => (\r\n  <StyledTableCell id={index}>{item}</StyledTableCell>\r\n              ))}\r\n            </> \r\n            :\r\n            <>\r\n            </>\r\n             }\r\n        \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n         {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => \r\n               <StyledTableRow key={index}>\r\n            { \r\n              header.map((i, subindex) =>\r\n                   <StyledTableCell >{row[i]}</StyledTableCell>)\r\n            }\r\n </StyledTableRow>\r\n            )}\r\n       </TableBody>\r\n      </Table>\r\n        <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </TableContainer>\r\n    </>\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}