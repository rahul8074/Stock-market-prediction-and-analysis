{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp-u\\\\Desktop\\\\PGR-project\\\\client\\\\src\\\\resetPassword.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      e.preventDefault();\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleForm = e => {\n      e.preventDefault();\n\n      if (this.state.email === '' || this.state.password === '' || this.state.confirm_password === '') {\n        NotificationManager.warning(\"Cant be Empty\");\n        return false;\n      }\n\n      if (this.state.password != this.state.confirm_password) {\n        NotificationManager.error(\"Password Did not Match\");\n        return false;\n      } // const data = { email: this.state.email, };\n      // console.log(data)\n\n\n      axios.post(\"http://localhost:9000/updatePassword\", this.state).then(result => {\n        NotificationManager.success(result.data.msg);\n      }).catch(err => {\n        if (err.response && err.response.status === 400) NotificationManager.error(err.response.data.msg);else NotificationManager.error(\"Something Went Wrong\");\n        this.setState({\n          errors: err.response\n        });\n      });\n    };\n\n    this.state = {\n      linkDate: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    let slugParam = this.props.match.params.slug;\n    let splitSlug = slugParam.split(\"+++\");\n    let reqDate = splitSlug[0];\n    let email = splitSlug[1];\n    console.log(reqDate);\n    console.log(email);\n    this.setState({\n      email: email,\n      linkDate: reqDate\n    });\n    let date1 = new Date(reqDate);\n    let currentDate = new Date();\n    let differenceinMS = currentDate - date1;\n\n    if (differenceinMS > 3600000) {\n      console.log(\"yoo\");\n      NotificationManager.error(\"Link Not Valid link will be valid for 15 min.Please sent the reset link Again\");\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleForm,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: {\n            marginTop: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header text-center\",\n                children: \"Reset Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    name: \"password\",\n                    value: this.state.password,\n                    onChange: this.handleInput,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Confirm Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    name: \"confirm_password\",\n                    value: this.state.confirm_password,\n                    onChange: this.handleInput,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-footer text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Reset\",\n                  onClick: this.handleForm,\n                  className: \"btn btn-primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ResetPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/hp-u/Desktop/PGR-project/client/src/resetPassword.js"],"names":["React","Component","axios","NotificationContainer","NotificationManager","withRouter","ResetPassword","constructor","props","handleInput","e","preventDefault","name","target","value","setState","handleForm","state","email","password","confirm_password","warning","error","post","then","result","success","data","msg","catch","err","response","status","errors","linkDate","componentDidMount","slugParam","match","params","slug","splitSlug","split","reqDate","console","log","date1","Date","currentDate","differenceinMS","history","push","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nimport { withRouter } from \"react-router\";\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { linkDate:\"\",email:\"\",password: \"\",confirm_password: \"\", errors: {} };\r\n    }\r\n    componentDidMount() {\r\n        let slugParam = this.props.match.params.slug;\r\n        let splitSlug=slugParam.split(\"+++\");\r\n        let reqDate=splitSlug[0];\r\n        let email=splitSlug[1];\r\n        console.log(reqDate);\r\n        console.log(email);\r\n        this.setState({email:email,linkDate:reqDate});\r\n        let date1 = new Date(reqDate);\r\n        let currentDate = new Date();\r\n        let differenceinMS = currentDate - date1\r\n        if (differenceinMS > 3600000) {\r\n            console.log(\"yoo\")\r\n            NotificationManager.error(\"Link Not Valid link will be valid for 15 min.Please sent the reset link Again\");\r\n            this.props.history.push(\"/login\");\r\n        }\r\n    }\r\n    handleInput = e => {\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n    handleForm = e => {\r\n        e.preventDefault();\r\n        if (this.state.email === '' || this.state.password === '' || this.state.confirm_password === '') {\r\n            NotificationManager.warning(\"Cant be Empty\");\r\n            return false;\r\n        }\r\n        if (this.state.password != this.state.confirm_password) {\r\n            NotificationManager.error(\"Password Did not Match\");\r\n            return false;\r\n        }\r\n        // const data = { email: this.state.email, };\r\n        // console.log(data)\r\n        axios\r\n            .post(\"http://localhost:9000/updatePassword\", this.state)\r\n            .then(result => {\r\n                NotificationManager.success(result.data.msg);\r\n            })\r\n            .catch(err => {\r\n                if (err.response && err.response.status === 400)\r\n                    NotificationManager.error(err.response.data.msg);\r\n                else\r\n                    NotificationManager.error(\"Something Went Wrong\");\r\n                this.setState({ errors: err.response })\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <NotificationContainer />\r\n                <form onSubmit={this.handleForm}>\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-3\"></div>\r\n                        <div className=\"col-sm-6\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">Reset Password</div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label >Password</label>\r\n                                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput} className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label >Confirm Password</label>\r\n                                        <input type=\"password\" name=\"confirm_password\" value={this.state.confirm_password} onChange={this.handleInput} className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <input type=\"submit\" value=\"Reset\" onClick={this.handleForm} className=\"btn btn-primary\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-3\"></div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPassword);\r\n"]},"metadata":{},"sourceType":"module"}