{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { MDCTabIndicator } from '@material/tab-indicator/component';\nimport { MDCTabFoundation } from './foundation';\n\nvar MDCTab =\n/** @class */\nfunction (_super) {\n  __extends(MDCTab, _super);\n\n  function MDCTab() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTab.attachTo = function (root) {\n    return new MDCTab(root);\n  };\n\n  MDCTab.prototype.initialize = function (rippleFactory, tabIndicatorFactory) {\n    if (rippleFactory === void 0) {\n      rippleFactory = function (el, foundation) {\n        return new MDCRipple(el, foundation);\n      };\n    }\n\n    if (tabIndicatorFactory === void 0) {\n      tabIndicatorFactory = function (el) {\n        return new MDCTabIndicator(el);\n      };\n    }\n\n    this.id = this.root.id;\n    var rippleFoundation = new MDCRippleFoundation(MDCRipple.createAdapter(this));\n    this.ripple_ = rippleFactory(this.root, rippleFoundation);\n    var tabIndicatorElement = this.root.querySelector(MDCTabFoundation.strings.TAB_INDICATOR_SELECTOR);\n    this.tabIndicator_ = tabIndicatorFactory(tabIndicatorElement);\n    this.content_ = this.root.querySelector(MDCTabFoundation.strings.CONTENT_SELECTOR);\n  };\n\n  MDCTab.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleClick_ = function () {\n      return _this.foundation.handleClick();\n    };\n\n    this.listen('click', this.handleClick_);\n  };\n\n  MDCTab.prototype.destroy = function () {\n    this.unlisten('click', this.handleClick_);\n    this.ripple_.destroy();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  MDCTab.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      setAttr: function (attr, value) {\n        return _this.root.setAttribute(attr, value);\n      },\n      addClass: function (className) {\n        return _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root.classList.contains(className);\n      },\n      activateIndicator: function (previousIndicatorClientRect) {\n        return _this.tabIndicator_.activate(previousIndicatorClientRect);\n      },\n      deactivateIndicator: function () {\n        return _this.tabIndicator_.deactivate();\n      },\n      notifyInteracted: function () {\n        return _this.emit(MDCTabFoundation.strings.INTERACTED_EVENT, {\n          tabId: _this.id\n        }, true\n        /* bubble */\n        );\n      },\n      getOffsetLeft: function () {\n        return _this.root.offsetLeft;\n      },\n      getOffsetWidth: function () {\n        return _this.root.offsetWidth;\n      },\n      getContentOffsetLeft: function () {\n        return _this.content_.offsetLeft;\n      },\n      getContentOffsetWidth: function () {\n        return _this.content_.offsetWidth;\n      },\n      focus: function () {\n        return _this.root.focus();\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCTabFoundation(adapter);\n  };\n\n  Object.defineProperty(MDCTab.prototype, \"active\", {\n    /**\n     * Getter for the active state of the tab\n     */\n    get: function () {\n      return this.foundation.isActive();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTab.prototype, \"focusOnActivate\", {\n    set: function (focusOnActivate) {\n      this.foundation.setFocusOnActivate(focusOnActivate);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Activates the tab\n   */\n\n  MDCTab.prototype.activate = function (computeIndicatorClientRect) {\n    this.foundation.activate(computeIndicatorClientRect);\n  };\n  /**\n   * Deactivates the tab\n   */\n\n\n  MDCTab.prototype.deactivate = function () {\n    this.foundation.deactivate();\n  };\n  /**\n   * Returns the indicator's client rect\n   */\n\n\n  MDCTab.prototype.computeIndicatorClientRect = function () {\n    return this.tabIndicator_.computeContentClientRect();\n  };\n\n  MDCTab.prototype.computeDimensions = function () {\n    return this.foundation.computeDimensions();\n  };\n  /**\n   * Focuses the tab\n   */\n\n\n  MDCTab.prototype.focus = function () {\n    this.root.focus();\n  };\n\n  return MDCTab;\n}(MDCComponent);\n\nexport { MDCTab };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { MDCTabIndicator } from '@material/tab-indicator/component';\nimport { MDCTabFoundation } from './foundation';\nvar MDCTab = /** @class */ (function (_super) {\n    __extends(MDCTab, _super);\n    function MDCTab() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTab.attachTo = function (root) {\n        return new MDCTab(root);\n    };\n    MDCTab.prototype.initialize = function (rippleFactory, tabIndicatorFactory) {\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) { return new MDCRipple(el, foundation); }; }\n        if (tabIndicatorFactory === void 0) { tabIndicatorFactory = function (el) { return new MDCTabIndicator(el); }; }\n        this.id = this.root.id;\n        var rippleFoundation = new MDCRippleFoundation(MDCRipple.createAdapter(this));\n        this.ripple_ = rippleFactory(this.root, rippleFoundation);\n        var tabIndicatorElement = this.root.querySelector(MDCTabFoundation.strings.TAB_INDICATOR_SELECTOR);\n        this.tabIndicator_ = tabIndicatorFactory(tabIndicatorElement);\n        this.content_ = this.root.querySelector(MDCTabFoundation.strings.CONTENT_SELECTOR);\n    };\n    MDCTab.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleClick_ = function () { return _this.foundation.handleClick(); };\n        this.listen('click', this.handleClick_);\n    };\n    MDCTab.prototype.destroy = function () {\n        this.unlisten('click', this.handleClick_);\n        this.ripple_.destroy();\n        _super.prototype.destroy.call(this);\n    };\n    MDCTab.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            activateIndicator: function (previousIndicatorClientRect) {\n                return _this.tabIndicator_.activate(previousIndicatorClientRect);\n            },\n            deactivateIndicator: function () { return _this.tabIndicator_.deactivate(); },\n            notifyInteracted: function () { return _this.emit(MDCTabFoundation.strings.INTERACTED_EVENT, { tabId: _this.id }, true /* bubble */); },\n            getOffsetLeft: function () { return _this.root.offsetLeft; },\n            getOffsetWidth: function () { return _this.root.offsetWidth; },\n            getContentOffsetLeft: function () { return _this.content_.offsetLeft; },\n            getContentOffsetWidth: function () { return _this.content_.offsetWidth; },\n            focus: function () { return _this.root.focus(); },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTabFoundation(adapter);\n    };\n    Object.defineProperty(MDCTab.prototype, \"active\", {\n        /**\n         * Getter for the active state of the tab\n         */\n        get: function () {\n            return this.foundation.isActive();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTab.prototype, \"focusOnActivate\", {\n        set: function (focusOnActivate) {\n            this.foundation.setFocusOnActivate(focusOnActivate);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Activates the tab\n     */\n    MDCTab.prototype.activate = function (computeIndicatorClientRect) {\n        this.foundation.activate(computeIndicatorClientRect);\n    };\n    /**\n     * Deactivates the tab\n     */\n    MDCTab.prototype.deactivate = function () {\n        this.foundation.deactivate();\n    };\n    /**\n     * Returns the indicator's client rect\n     */\n    MDCTab.prototype.computeIndicatorClientRect = function () {\n        return this.tabIndicator_.computeContentClientRect();\n    };\n    MDCTab.prototype.computeDimensions = function () {\n        return this.foundation.computeDimensions();\n    };\n    /**\n     * Focuses the tab\n     */\n    MDCTab.prototype.focus = function () {\n        this.root.focus();\n    };\n    return MDCTab;\n}(MDCComponent));\nexport { MDCTab };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}