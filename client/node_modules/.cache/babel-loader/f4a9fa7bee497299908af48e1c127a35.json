{"ast":null,"code":"var _jsxFileName = \"D:\\\\PGR-project\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Router } from 'react-router'; // Create history object.\n\nimport createHistory from 'history/createBrowserHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst history = createHistory(); //default base url\n\naxios.defaults.baseURL = 'http://localhost:9000';\n\nfunction Search() {\n  _s();\n\n  const history = useHistory();\n  const [val, setVal] = useState([]);\n\n  const fetchData = async () => {\n    const result = await axios.get('/names/company');\n    setVal(result.data);\n  };\n\n  const items = [];\n  val.map((res, index) => items.push({\n    name: res.symbol\n  })); //console.log(\"items\",items)\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleOnSearch = (string, results) => {// onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n    //console.log(string, results)\n  };\n\n  const handleOnHover = result => {// the item hovered\n    // console.log(result)\n  };\n\n  const handleOnSelect = item => {\n    // the item selected\n    const tab = window.localStorage.getItem('tabletype');\n\n    if (history.listen) {\n      history.push(`/data/${tab}`, {\n        params: item.name\n      });\n    } //console.log(item.name)\n\n  };\n\n  const handleOnFocus = () => {// console.log('Focused')\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleOnSelect(),\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n          items: items,\n          onSearch: handleOnSearch,\n          onHover: handleOnHover,\n          onSelect: handleOnSelect,\n          onFocus: handleOnFocus,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"Y7QoK+10UVJ7yCyDHCyFO/KqBqQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/PGR-project/client/src/components/SearchBar.js"],"names":["React","useState","useEffect","ReactSearchAutocomplete","axios","useHistory","Router","createHistory","history","defaults","baseURL","Search","val","setVal","fetchData","result","get","data","items","map","res","index","push","name","symbol","handleOnSearch","string","results","handleOnHover","handleOnSelect","item","tab","window","localStorage","getItem","listen","params","handleOnFocus","e","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;AACA,MAAMC,OAAO,GAAGD,aAAa,EAA7B,C,CAGA;;AACAH,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;;AAKA,SAASC,MAAT,GAAkB;AAAA;;AAEhB,QAAMH,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAK,CAACO,GAAD,EAAKC,MAAL,IAAeZ,QAAQ,CAAC,EAAD,CAA5B;;AAEA,QAAMa,SAAS,GAAG,YAAU;AAG5B,UAAMC,MAAM,GAAE,MAAMX,KAAK,CAACY,GAAN,CAAU,gBAAV,CAApB;AAEAH,IAAAA,MAAM,CAACE,MAAM,CAACE,IAAR,CAAN;AAEE,GAPF;;AAUD,QAAMC,KAAK,GAAE,EAAb;AAECN,EAAAA,GAAG,CAACO,GAAJ,CAAQ,CAACC,GAAD,EAAKC,KAAL,KACNH,KAAK,CAACI,IAAN,CAAW;AAACC,IAAAA,IAAI,EAAEH,GAAG,CAACI;AAAX,GAAX,CADF,EAlBgB,CAsBjB;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,SAAS;AACV,GAFS,EAEP,EAFO,CAAT;;AAOC,QAAMW,cAAc,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB,CAC1C;AACA;AACA;AACD,GAJD;;AAMA,QAAMC,aAAa,GAAIb,MAAD,IAAY,CAChC;AACD;AACA,GAHD;;AAKA,QAAMc,cAAc,GAAIC,IAAD,IAAU;AAC/B;AACF,UAAMC,GAAG,GAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAX;;AAEA,QAAI1B,OAAO,CAAC2B,MAAZ,EAAmB;AACjB3B,MAAAA,OAAO,CAACc,IAAR,CAAc,SAAQS,GAAI,EAA1B,EAA4B;AAACK,QAAAA,MAAM,EAAEN,IAAI,CAACP;AAAd,OAA5B;AACD,KANgC,CAW/B;;AACD,GAZD;;AAcA,QAAMc,aAAa,GAAG,MAAM,CAC3B;AAIA,GALD;;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEC,CAAC,IAAET,cAAc,EAAjC;AAAqC,IAAA,SAAS,EAAC,KAA/C;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,+BACE,QAAC,uBAAD;AACE,UAAA,KAAK,EAAErB,KADT;AAEE,UAAA,QAAQ,EAAEO,cAFZ;AAGE,UAAA,OAAO,EAAEG,aAHX;AAIE,UAAA,QAAQ,EAAEC,cAJZ;AAKE,UAAA,OAAO,EAAEQ,aALX;AAME,UAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAxFQ1B,M;UAESN,U;;;KAFTM,M;AA0FT,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n \r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\nimport axios from 'axios';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { Router } from 'react-router';\r\n\r\n// Create history object.\r\nimport createHistory from 'history/createBrowserHistory';\r\nconst history = createHistory();\r\n\r\n\r\n//default base url\r\naxios.defaults.baseURL = 'http://localhost:9000';\r\n\r\n\r\n\r\n\r\nfunction Search() {\r\n \r\n  const history = useHistory();\r\n   \r\n  const[val,setVal] = useState([])\r\n \r\n  const fetchData = async ()=>{\r\n  \r\n\r\n  const result= await axios.get('/names/company');\r\n  \r\n  setVal(result.data)\r\n \r\n   }\r\n  \r\n\r\n const items =[]\r\n\r\n  val.map((res,index)=>(\r\n    items.push({name: res.symbol})\r\n   ))\r\n \r\n //console.log(\"items\",items)\r\n  \r\n\r\n\r\n useEffect(() => {\r\n  fetchData();\r\n}, []);\r\n\r\n \r\n   \r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    //console.log(string, results)\r\n  }\r\n\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n   // console.log(result)\r\n  }\r\n\r\n  const handleOnSelect = (item) => {\r\n    // the item selected\r\n  const tab =window.localStorage.getItem('tabletype')\r\n     \r\n  if( history.listen){\r\n    history.push(`/data/${tab}`,{params: item.name})\r\n  }\r\n  \r\n    \r\n\r\n\r\n    //console.log(item.name)\r\n  }\r\n\r\n  const handleOnFocus = () => {\r\n   // console.log('Focused')\r\n    \r\n       \r\n      \r\n  }\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n  return (\r\n    <form onSubmit={e=>handleOnSelect()} className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div style={{ width: 400 }}>\r\n          <ReactSearchAutocomplete\r\n            items={items}\r\n            onSearch={handleOnSearch}\r\n            onHover={handleOnHover}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      </header>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}