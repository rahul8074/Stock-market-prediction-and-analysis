{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { cssClasses } from './constants';\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n */\n\nvar horizontalScrollbarHeight_;\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n */\n\nexport function computeHorizontalScrollbarHeight(documentObj, shouldCacheResult) {\n  if (shouldCacheResult === void 0) {\n    shouldCacheResult = true;\n  }\n\n  if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n    return horizontalScrollbarHeight_;\n  }\n\n  var el = documentObj.createElement('div');\n  el.classList.add(cssClasses.SCROLL_TEST);\n  documentObj.body.appendChild(el);\n  var horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n  documentObj.body.removeChild(el);\n\n  if (shouldCacheResult) {\n    horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n  }\n\n  return horizontalScrollbarHeight;\n}","map":{"version":3,"sources":["util.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;AAEH,SAAQ,UAAR,QAAyB,aAAzB;AAEA;;AAEG;;AACH,IAAI,0BAAJ;AAEA;;;AAGG;;AACH,OAAM,SAAU,gCAAV,CAA2C,WAA3C,EAAkE,iBAAlE,EAA0F;AAAxB,MAAA,iBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,IAAA;AAAwB;;AAC9F,MAAI,iBAAiB,IAAI,OAAO,0BAAP,KAAsC,WAA/D,EAA4E;AAC1E,WAAO,0BAAP;AACD;;AAED,MAAM,EAAE,GAAG,WAAW,CAAC,aAAZ,CAA0B,KAA1B,CAAX;AACA,EAAA,EAAE,CAAC,SAAH,CAAa,GAAb,CAAiB,UAAU,CAAC,WAA5B;AACA,EAAA,WAAW,CAAC,IAAZ,CAAiB,WAAjB,CAA6B,EAA7B;AAEA,MAAM,yBAAyB,GAAG,EAAE,CAAC,YAAH,GAAkB,EAAE,CAAC,YAAvD;AACA,EAAA,WAAW,CAAC,IAAZ,CAAiB,WAAjB,CAA6B,EAA7B;;AAEA,MAAI,iBAAJ,EAAuB;AACrB,IAAA,0BAA0B,GAAG,yBAA7B;AACD;;AACD,SAAO,yBAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { cssClasses } from './constants';\n/**\n * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n */\nvar horizontalScrollbarHeight_;\n/**\n * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n * May return 0 (e.g. on OS X browsers under default configuration).\n */\nexport function computeHorizontalScrollbarHeight(documentObj, shouldCacheResult) {\n    if (shouldCacheResult === void 0) { shouldCacheResult = true; }\n    if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n        return horizontalScrollbarHeight_;\n    }\n    var el = documentObj.createElement('div');\n    el.classList.add(cssClasses.SCROLL_TEST);\n    documentObj.body.appendChild(el);\n    var horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n    documentObj.body.removeChild(el);\n    if (shouldCacheResult) {\n        horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n    }\n    return horizontalScrollbarHeight;\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}