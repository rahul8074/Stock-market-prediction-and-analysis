{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCTabScroller } from '@material/tab-scroller/component';\nimport { MDCTab } from '@material/tab/component';\nimport { MDCTabFoundation } from '@material/tab/foundation';\nimport { MDCTabBarFoundation } from './foundation';\nvar strings = MDCTabBarFoundation.strings;\nvar tabIdCounter = 0;\n\nvar MDCTabBar =\n/** @class */\nfunction (_super) {\n  __extends(MDCTabBar, _super);\n\n  function MDCTabBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTabBar.attachTo = function (root) {\n    return new MDCTabBar(root);\n  };\n\n  Object.defineProperty(MDCTabBar.prototype, \"focusOnActivate\", {\n    set: function (focusOnActivate) {\n      this.tabList_.forEach(function (tab) {\n        return tab.focusOnActivate = focusOnActivate;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCTabBar.prototype, \"useAutomaticActivation\", {\n    set: function (useAutomaticActivation) {\n      this.foundation.setUseAutomaticActivation(useAutomaticActivation);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCTabBar.prototype.initialize = function (tabFactory, tabScrollerFactory) {\n    if (tabFactory === void 0) {\n      tabFactory = function (el) {\n        return new MDCTab(el);\n      };\n    }\n\n    if (tabScrollerFactory === void 0) {\n      tabScrollerFactory = function (el) {\n        return new MDCTabScroller(el);\n      };\n    }\n\n    this.tabList_ = this.instantiateTabs_(tabFactory);\n    this.tabScroller_ = this.instantiateTabScroller_(tabScrollerFactory);\n  };\n\n  MDCTabBar.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleTabInteraction_ = function (evt) {\n      return _this.foundation.handleTabInteraction(evt);\n    };\n\n    this.handleKeyDown_ = function (evt) {\n      return _this.foundation.handleKeyDown(evt);\n    };\n\n    this.listen(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n    this.listen('keydown', this.handleKeyDown_);\n\n    for (var i = 0; i < this.tabList_.length; i++) {\n      if (this.tabList_[i].active) {\n        this.scrollIntoView(i);\n        break;\n      }\n    }\n  };\n\n  MDCTabBar.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.unlisten(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n    this.unlisten('keydown', this.handleKeyDown_);\n    this.tabList_.forEach(function (tab) {\n      return tab.destroy();\n    });\n\n    if (this.tabScroller_) {\n      this.tabScroller_.destroy();\n    }\n  };\n\n  MDCTabBar.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      scrollTo: function (scrollX) {\n        return _this.tabScroller_.scrollTo(scrollX);\n      },\n      incrementScroll: function (scrollXIncrement) {\n        return _this.tabScroller_.incrementScroll(scrollXIncrement);\n      },\n      getScrollPosition: function () {\n        return _this.tabScroller_.getScrollPosition();\n      },\n      getScrollContentWidth: function () {\n        return _this.tabScroller_.getScrollContentWidth();\n      },\n      getOffsetWidth: function () {\n        return _this.root.offsetWidth;\n      },\n      isRTL: function () {\n        return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl';\n      },\n      setActiveTab: function (index) {\n        return _this.foundation.activateTab(index);\n      },\n      activateTabAtIndex: function (index, clientRect) {\n        return _this.tabList_[index].activate(clientRect);\n      },\n      deactivateTabAtIndex: function (index) {\n        return _this.tabList_[index].deactivate();\n      },\n      focusTabAtIndex: function (index) {\n        return _this.tabList_[index].focus();\n      },\n      getTabIndicatorClientRectAtIndex: function (index) {\n        return _this.tabList_[index].computeIndicatorClientRect();\n      },\n      getTabDimensionsAtIndex: function (index) {\n        return _this.tabList_[index].computeDimensions();\n      },\n      getPreviousActiveTabIndex: function () {\n        for (var i = 0; i < _this.tabList_.length; i++) {\n          if (_this.tabList_[i].active) {\n            return i;\n          }\n        }\n\n        return -1;\n      },\n      getFocusedTabIndex: function () {\n        var tabElements = _this.getTabElements_();\n\n        var activeElement = document.activeElement;\n        return tabElements.indexOf(activeElement);\n      },\n      getIndexOfTabById: function (id) {\n        for (var i = 0; i < _this.tabList_.length; i++) {\n          if (_this.tabList_[i].id === id) {\n            return i;\n          }\n        }\n\n        return -1;\n      },\n      getTabListLength: function () {\n        return _this.tabList_.length;\n      },\n      notifyTabActivated: function (index) {\n        return _this.emit(strings.TAB_ACTIVATED_EVENT, {\n          index: index\n        }, true);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new MDCTabBarFoundation(adapter);\n  };\n  /**\n   * Activates the tab at the given index\n   * @param index The index of the tab\n   */\n\n\n  MDCTabBar.prototype.activateTab = function (index) {\n    this.foundation.activateTab(index);\n  };\n  /**\n   * Scrolls the tab at the given index into view\n   * @param index THe index of the tab\n   */\n\n\n  MDCTabBar.prototype.scrollIntoView = function (index) {\n    this.foundation.scrollIntoView(index);\n  };\n  /**\n   * Returns all the tab elements in a nice clean array\n   */\n\n\n  MDCTabBar.prototype.getTabElements_ = function () {\n    return [].slice.call(this.root.querySelectorAll(strings.TAB_SELECTOR));\n  };\n  /**\n   * Instantiates tab components on all child tab elements\n   */\n\n\n  MDCTabBar.prototype.instantiateTabs_ = function (tabFactory) {\n    return this.getTabElements_().map(function (el) {\n      el.id = el.id || \"mdc-tab-\" + ++tabIdCounter;\n      return tabFactory(el);\n    });\n  };\n  /**\n   * Instantiates tab scroller component on the child tab scroller element\n   */\n\n\n  MDCTabBar.prototype.instantiateTabScroller_ = function (tabScrollerFactory) {\n    var tabScrollerElement = this.root.querySelector(strings.TAB_SCROLLER_SELECTOR);\n\n    if (tabScrollerElement) {\n      return tabScrollerFactory(tabScrollerElement);\n    }\n\n    return null;\n  };\n\n  return MDCTabBar;\n}(MDCComponent);\n\nexport { MDCTabBar };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCTabScroller } from '@material/tab-scroller/component';\nimport { MDCTab } from '@material/tab/component';\nimport { MDCTabFoundation } from '@material/tab/foundation';\nimport { MDCTabBarFoundation } from './foundation';\nvar strings = MDCTabBarFoundation.strings;\nvar tabIdCounter = 0;\nvar MDCTabBar = /** @class */ (function (_super) {\n    __extends(MDCTabBar, _super);\n    function MDCTabBar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTabBar.attachTo = function (root) {\n        return new MDCTabBar(root);\n    };\n    Object.defineProperty(MDCTabBar.prototype, \"focusOnActivate\", {\n        set: function (focusOnActivate) {\n            this.tabList_.forEach(function (tab) { return tab.focusOnActivate = focusOnActivate; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabBar.prototype, \"useAutomaticActivation\", {\n        set: function (useAutomaticActivation) {\n            this.foundation.setUseAutomaticActivation(useAutomaticActivation);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTabBar.prototype.initialize = function (tabFactory, tabScrollerFactory) {\n        if (tabFactory === void 0) { tabFactory = function (el) { return new MDCTab(el); }; }\n        if (tabScrollerFactory === void 0) { tabScrollerFactory = function (el) { return new MDCTabScroller(el); }; }\n        this.tabList_ = this.instantiateTabs_(tabFactory);\n        this.tabScroller_ = this.instantiateTabScroller_(tabScrollerFactory);\n    };\n    MDCTabBar.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleTabInteraction_ = function (evt) {\n            return _this.foundation.handleTabInteraction(evt);\n        };\n        this.handleKeyDown_ = function (evt) { return _this.foundation.handleKeyDown(evt); };\n        this.listen(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n        this.listen('keydown', this.handleKeyDown_);\n        for (var i = 0; i < this.tabList_.length; i++) {\n            if (this.tabList_[i].active) {\n                this.scrollIntoView(i);\n                break;\n            }\n        }\n    };\n    MDCTabBar.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.unlisten(MDCTabFoundation.strings.INTERACTED_EVENT, this.handleTabInteraction_);\n        this.unlisten('keydown', this.handleKeyDown_);\n        this.tabList_.forEach(function (tab) { return tab.destroy(); });\n        if (this.tabScroller_) {\n            this.tabScroller_.destroy();\n        }\n    };\n    MDCTabBar.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            scrollTo: function (scrollX) { return _this.tabScroller_.scrollTo(scrollX); },\n            incrementScroll: function (scrollXIncrement) {\n                return _this.tabScroller_.incrementScroll(scrollXIncrement);\n            },\n            getScrollPosition: function () { return _this.tabScroller_.getScrollPosition(); },\n            getScrollContentWidth: function () { return _this.tabScroller_.getScrollContentWidth(); },\n            getOffsetWidth: function () { return _this.root.offsetWidth; },\n            isRTL: function () { return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl'; },\n            setActiveTab: function (index) { return _this.foundation.activateTab(index); },\n            activateTabAtIndex: function (index, clientRect) {\n                return _this.tabList_[index].activate(clientRect);\n            },\n            deactivateTabAtIndex: function (index) { return _this.tabList_[index].deactivate(); },\n            focusTabAtIndex: function (index) { return _this.tabList_[index].focus(); },\n            getTabIndicatorClientRectAtIndex: function (index) {\n                return _this.tabList_[index].computeIndicatorClientRect();\n            },\n            getTabDimensionsAtIndex: function (index) {\n                return _this.tabList_[index].computeDimensions();\n            },\n            getPreviousActiveTabIndex: function () {\n                for (var i = 0; i < _this.tabList_.length; i++) {\n                    if (_this.tabList_[i].active) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n            getFocusedTabIndex: function () {\n                var tabElements = _this.getTabElements_();\n                var activeElement = document.activeElement;\n                return tabElements.indexOf(activeElement);\n            },\n            getIndexOfTabById: function (id) {\n                for (var i = 0; i < _this.tabList_.length; i++) {\n                    if (_this.tabList_[i].id === id) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n            getTabListLength: function () { return _this.tabList_.length; },\n            notifyTabActivated: function (index) { return _this.emit(strings.TAB_ACTIVATED_EVENT, { index: index }, true); },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTabBarFoundation(adapter);\n    };\n    /**\n     * Activates the tab at the given index\n     * @param index The index of the tab\n     */\n    MDCTabBar.prototype.activateTab = function (index) {\n        this.foundation.activateTab(index);\n    };\n    /**\n     * Scrolls the tab at the given index into view\n     * @param index THe index of the tab\n     */\n    MDCTabBar.prototype.scrollIntoView = function (index) {\n        this.foundation.scrollIntoView(index);\n    };\n    /**\n     * Returns all the tab elements in a nice clean array\n     */\n    MDCTabBar.prototype.getTabElements_ = function () {\n        return [].slice.call(this.root.querySelectorAll(strings.TAB_SELECTOR));\n    };\n    /**\n     * Instantiates tab components on all child tab elements\n     */\n    MDCTabBar.prototype.instantiateTabs_ = function (tabFactory) {\n        return this.getTabElements_().map(function (el) {\n            el.id = el.id || \"mdc-tab-\" + ++tabIdCounter;\n            return tabFactory(el);\n        });\n    };\n    /**\n     * Instantiates tab scroller component on the child tab scroller element\n     */\n    MDCTabBar.prototype.instantiateTabScroller_ = function (tabScrollerFactory) {\n        var tabScrollerElement = this.root.querySelector(strings.TAB_SCROLLER_SELECTOR);\n        if (tabScrollerElement) {\n            return tabScrollerFactory(tabScrollerElement);\n        }\n        return null;\n    };\n    return MDCTabBar;\n}(MDCComponent));\nexport { MDCTabBar };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}