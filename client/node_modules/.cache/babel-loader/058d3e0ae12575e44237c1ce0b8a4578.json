{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFadingTabIndicatorFoundation } from './fading-foundation';\nimport { MDCTabIndicatorFoundation } from './foundation';\nimport { MDCSlidingTabIndicatorFoundation } from './sliding-foundation';\n\nvar MDCTabIndicator =\n/** @class */\nfunction (_super) {\n  __extends(MDCTabIndicator, _super);\n\n  function MDCTabIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTabIndicator.attachTo = function (root) {\n    return new MDCTabIndicator(root);\n  };\n\n  MDCTabIndicator.prototype.initialize = function () {\n    this.content_ = this.root.querySelector(MDCTabIndicatorFoundation.strings.CONTENT_SELECTOR);\n  };\n\n  MDCTabIndicator.prototype.computeContentClientRect = function () {\n    return this.foundation.computeContentClientRect();\n  };\n\n  MDCTabIndicator.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      addClass: function (className) {\n        return _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root.classList.remove(className);\n      },\n      computeContentClientRect: function () {\n        return _this.content_.getBoundingClientRect();\n      },\n      setContentStyleProperty: function (prop, value) {\n        return _this.content_.style.setProperty(prop, value);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    if (this.root.classList.contains(MDCTabIndicatorFoundation.cssClasses.FADE)) {\n      return new MDCFadingTabIndicatorFoundation(adapter);\n    } // Default to the sliding indicator\n\n\n    return new MDCSlidingTabIndicatorFoundation(adapter);\n  };\n\n  MDCTabIndicator.prototype.activate = function (previousIndicatorClientRect) {\n    this.foundation.activate(previousIndicatorClientRect);\n  };\n\n  MDCTabIndicator.prototype.deactivate = function () {\n    this.foundation.deactivate();\n  };\n\n  return MDCTabIndicator;\n}(MDCComponent);\n\nexport { MDCTabIndicator };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAEH,SAAQ,YAAR,QAA2B,0BAA3B;AAGA,SAAQ,+BAAR,QAA8C,qBAA9C;AACA,SAAQ,yBAAR,QAAwC,cAAxC;AACA,SAAQ,gCAAR,QAA+C,sBAA/C;;AAIA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,eAAA,GAAA;;AA6CC;;AA5CQ,EAAA,eAAA,CAAA,QAAA,GAAP,UAAgB,IAAhB,EAA6B;AAC3B,WAAO,IAAI,eAAJ,CAAoB,IAApB,CAAP;AACD,GAFM;;AAMP,EAAA,eAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,SAAK,QAAL,GAAgB,KAAK,IAAL,CAAU,aAAV,CACZ,yBAAyB,CAAC,OAA1B,CAAkC,gBADtB,CAAhB;AAED,GAHD;;AAKA,EAAA,eAAA,CAAA,SAAA,CAAA,wBAAA,GAAA,YAAA;AACE,WAAO,KAAK,UAAL,CAAgB,wBAAhB,EAAP;AACD,GAFD;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA,CAAA,CACE;AACA;AACA;;;AACA,QAAM,OAAO,GAA2B;AACtC,MAAA,QAAQ,EAAE,UAAC,SAAD,EAAU;AAAK,eAAA,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,GAApB,CAAA,SAAA,CAAA;AAAkC,OADrB;AAEtC,MAAA,WAAW,EAAE,UAAC,SAAD,EAAU;AAAK,eAAA,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,MAApB,CAAA,SAAA,CAAA;AAAqC,OAF3B;AAGtC,MAAA,wBAAwB,EAAE,YAAA;AAAM,eAAA,KAAI,CAAC,QAAL,CAAA,qBAAA,EAAA;AAAqC,OAH/B;AAItC,MAAA,uBAAuB,EAAE,UAAC,IAAD,EAAO,KAAP,EAAY;AACjC,eAAA,KAAI,CAAC,QAAL,CAAc,KAAd,CAAoB,WAApB,CAAgC,IAAhC,EAAsC,KAAtC,CAAA;AAA4C;AALV,KAAxC,CAJF,CAWE;;AAEA,QAAI,KAAK,IAAL,CAAU,SAAV,CAAoB,QAApB,CACI,yBAAyB,CAAC,UAA1B,CAAqC,IADzC,CAAJ,EACoD;AAClD,aAAO,IAAI,+BAAJ,CAAoC,OAApC,CAAP;AACD,KAhBH,CAkBE;;;AACA,WAAO,IAAI,gCAAJ,CAAqC,OAArC,CAAP;AACD,GApBD;;AAsBA,EAAA,eAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,2BAAT,EAAiD;AAC/C,SAAK,UAAL,CAAgB,QAAhB,CAAyB,2BAAzB;AACD,GAFD;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,SAAK,UAAL,CAAgB,UAAhB;AACD,GAFD;;AAGF,SAAA,eAAA;AAAC,CA7CD,CAAqC,YAArC,CAAA","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFadingTabIndicatorFoundation } from './fading-foundation';\nimport { MDCTabIndicatorFoundation } from './foundation';\nimport { MDCSlidingTabIndicatorFoundation } from './sliding-foundation';\nvar MDCTabIndicator = /** @class */ (function (_super) {\n    __extends(MDCTabIndicator, _super);\n    function MDCTabIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTabIndicator.attachTo = function (root) {\n        return new MDCTabIndicator(root);\n    };\n    MDCTabIndicator.prototype.initialize = function () {\n        this.content_ = this.root.querySelector(MDCTabIndicatorFoundation.strings.CONTENT_SELECTOR);\n    };\n    MDCTabIndicator.prototype.computeContentClientRect = function () {\n        return this.foundation.computeContentClientRect();\n    };\n    MDCTabIndicator.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            computeContentClientRect: function () { return _this.content_.getBoundingClientRect(); },\n            setContentStyleProperty: function (prop, value) {\n                return _this.content_.style.setProperty(prop, value);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        if (this.root.classList.contains(MDCTabIndicatorFoundation.cssClasses.FADE)) {\n            return new MDCFadingTabIndicatorFoundation(adapter);\n        }\n        // Default to the sliding indicator\n        return new MDCSlidingTabIndicatorFoundation(adapter);\n    };\n    MDCTabIndicator.prototype.activate = function (previousIndicatorClientRect) {\n        this.foundation.activate(previousIndicatorClientRect);\n    };\n    MDCTabIndicator.prototype.deactivate = function () {\n        this.foundation.deactivate();\n    };\n    return MDCTabIndicator;\n}(MDCComponent));\nexport { MDCTabIndicator };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}