{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabScrollerRTL } from './rtl-scroller';\n\nvar MDCTabScrollerRTLNegative =\n/** @class */\nfunction (_super) {\n  __extends(MDCTabScrollerRTLNegative, _super);\n\n  function MDCTabScrollerRTLNegative() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTabScrollerRTLNegative.prototype.getScrollPositionRTL = function (translateX) {\n    var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n    return Math.round(translateX - currentScrollLeft);\n  };\n\n  MDCTabScrollerRTLNegative.prototype.scrollToRTL = function (scrollX) {\n    var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n    var clampedScrollLeft = this.clampScrollValue_(-scrollX);\n    return {\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft\n    };\n  };\n\n  MDCTabScrollerRTLNegative.prototype.incrementScrollRTL = function (scrollX) {\n    var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n    var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n    return {\n      finalScrollPosition: clampedScrollLeft,\n      scrollDelta: clampedScrollLeft - currentScrollLeft\n    };\n  };\n\n  MDCTabScrollerRTLNegative.prototype.getAnimatingScrollPosition = function (scrollX, translateX) {\n    return scrollX - translateX;\n  };\n\n  MDCTabScrollerRTLNegative.prototype.calculateScrollEdges_ = function () {\n    var contentWidth = this.adapter.getScrollContentOffsetWidth();\n    var rootWidth = this.adapter.getScrollAreaOffsetWidth();\n    return {\n      left: rootWidth - contentWidth,\n      right: 0\n    };\n  };\n\n  MDCTabScrollerRTLNegative.prototype.clampScrollValue_ = function (scrollX) {\n    var edges = this.calculateScrollEdges_();\n    return Math.max(Math.min(edges.right, scrollX), edges.left);\n  };\n\n  return MDCTabScrollerRTLNegative;\n}(MDCTabScrollerRTL);\n\nexport { MDCTabScrollerRTLNegative }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCTabScrollerRTLNegative;","map":{"version":3,"sources":["rtl-negative-scroller.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAEH,SAAQ,iBAAR,QAAgC,gBAAhC;;AAGA,IAAA,yBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+C,EAAA,SAAA,CAAA,yBAAA,EAAA,MAAA,CAAA;;AAA/C,WAAA,yBAAA,GAAA;;AAyCC;;AAxCC,EAAA,yBAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,UAAqB,UAArB,EAAuC;AACrC,QAAM,iBAAiB,GAAG,KAAK,OAAL,CAAa,uBAAb,EAA1B;AACA,WAAO,IAAI,CAAC,KAAL,CAAW,UAAU,GAAG,iBAAxB,CAAP;AACD,GAHD;;AAKA,EAAA,yBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,OAAZ,EAA2B;AACzB,QAAM,iBAAiB,GAAG,KAAK,OAAL,CAAa,uBAAb,EAA1B;AACA,QAAM,iBAAiB,GAAG,KAAK,iBAAL,CAAuB,CAAC,OAAxB,CAA1B;AACA,WAAO;AACL,MAAA,mBAAmB,EAAE,iBADhB;AAEL,MAAA,WAAW,EAAE,iBAAiB,GAAG;AAF5B,KAAP;AAID,GAPD;;AASA,EAAA,yBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAmB,OAAnB,EAAkC;AAChC,QAAM,iBAAiB,GAAG,KAAK,OAAL,CAAa,uBAAb,EAA1B;AACA,QAAM,iBAAiB,GAAG,KAAK,iBAAL,CAAuB,iBAAiB,GAAG,OAA3C,CAA1B;AACA,WAAO;AACL,MAAA,mBAAmB,EAAE,iBADhB;AAEL,MAAA,WAAW,EAAE,iBAAiB,GAAG;AAF5B,KAAP;AAID,GAPD;;AASA,EAAA,yBAAA,CAAA,SAAA,CAAA,0BAAA,GAAA,UAA2B,OAA3B,EAA4C,UAA5C,EAA8D;AAC5D,WAAO,OAAO,GAAG,UAAjB;AACD,GAFD;;AAIQ,EAAA,yBAAA,CAAA,SAAA,CAAA,qBAAA,GAAR,YAAA;AACE,QAAM,YAAY,GAAG,KAAK,OAAL,CAAa,2BAAb,EAArB;AACA,QAAM,SAAS,GAAG,KAAK,OAAL,CAAa,wBAAb,EAAlB;AACA,WAAO;AACL,MAAA,IAAI,EAAE,SAAS,GAAG,YADb;AAEL,MAAA,KAAK,EAAE;AAFF,KAAP;AAID,GAPO;;AASA,EAAA,yBAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,UAA0B,OAA1B,EAAyC;AACvC,QAAM,KAAK,GAAG,KAAK,qBAAL,EAAd;AACA,WAAO,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,KAAf,EAAsB,OAAtB,CAAT,EAAyC,KAAK,CAAC,IAA/C,CAAP;AACD,GAHO;;AAIV,SAAA,yBAAA;AAAC,CAzCD,CAA+C,iBAA/C,CAAA;;sCA2CA;;AACA,eAAe,yBAAf","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabScrollerRTL } from './rtl-scroller';\nvar MDCTabScrollerRTLNegative = /** @class */ (function (_super) {\n    __extends(MDCTabScrollerRTLNegative, _super);\n    function MDCTabScrollerRTLNegative() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTabScrollerRTLNegative.prototype.getScrollPositionRTL = function (translateX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        return Math.round(translateX - currentScrollLeft);\n    };\n    MDCTabScrollerRTLNegative.prototype.scrollToRTL = function (scrollX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(-scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: clampedScrollLeft - currentScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLNegative.prototype.incrementScrollRTL = function (scrollX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: clampedScrollLeft - currentScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLNegative.prototype.getAnimatingScrollPosition = function (scrollX, translateX) {\n        return scrollX - translateX;\n    };\n    MDCTabScrollerRTLNegative.prototype.calculateScrollEdges_ = function () {\n        var contentWidth = this.adapter.getScrollContentOffsetWidth();\n        var rootWidth = this.adapter.getScrollAreaOffsetWidth();\n        return {\n            left: rootWidth - contentWidth,\n            right: 0,\n        };\n    };\n    MDCTabScrollerRTLNegative.prototype.clampScrollValue_ = function (scrollX) {\n        var edges = this.calculateScrollEdges_();\n        return Math.max(Math.min(edges.right, scrollX), edges.left);\n    };\n    return MDCTabScrollerRTLNegative;\n}(MDCTabScrollerRTL));\nexport { MDCTabScrollerRTLNegative };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabScrollerRTLNegative;\n//# sourceMappingURL=rtl-negative-scroller.js.map"]},"metadata":{},"sourceType":"module"}