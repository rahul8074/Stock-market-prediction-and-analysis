{"ast":null,"code":"var _jsxFileName = \"D:\\\\Praedico global INTERNSHIP\\\\PGR-project\\\\client\\\\src\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Nav from './Navbar';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport useStyles from './Style';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Input from './Input';\nimport Icon from './Icon';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signin, signup } from './actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  mobileno: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(\"Google Sign In Failed, Try Agian Later\");\n    console.log(error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          elevation: 3,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.avatar,\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: isSignup ? 'Sign Up' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  name: \"firstName\",\n                  label: \"First Name\",\n                  handleChange: handleChange,\n                  autoFocus: true,\n                  half: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"lastName\",\n                  label: \"Last Name\",\n                  handleChange: handleChange,\n                  half: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"email\",\n                label: \"Email Address\",\n                handleChange: handleChange,\n                type: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n                name: \"mobileno\",\n                label: \"Contact Number\",\n                handleChange: handleChange,\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"password\",\n                label: \"Password\",\n                handleChange: handleChange,\n                type: showPassword ? \"text\" : \"password\",\n                handleShowPassword: handleShowPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n                name: \"confirmPassword\",\n                label: \"Repeat Password\",\n                handleChange: handleChange,\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  fullWidth: true,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.submit,\n                  children: isSignup ? 'Sign Up' : 'Sign In'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n                  clientId: \"580463721095-cji152gg9b4iog5eaegvhq0hnol4e7lp.apps.googleusercontent.com\",\n                  render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.googleButton,\n                    color: \"primary\",\n                    fullWidth: true,\n                    onClick: renderProps.onClick,\n                    disabled: renderProps.disabled,\n                    startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 44\n                    }, this),\n                    variant: \"contained\",\n                    children: \"Google Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 29\n                  }, this),\n                  onSuccess: googleSuccess,\n                  onFailure: googleFailure,\n                  cookiePolicy: \"single_host_origin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justify: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: switchMode,\n                      children: isSignup ? 'Already have an account? Sign In' : 'If not have account, Sign Up'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"D8t/emO9pc6UsHbo4A79RoQHT/M=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Praedico global INTERNSHIP/PGR-project/client/src/Login.jsx"],"names":["React","useState","Nav","Avatar","Button","Paper","Grid","Typography","Container","TextField","useStyles","AccountCircleIcon","Input","Icon","GoogleLogin","useDispatch","useHistory","signin","signup","initialState","firstName","lastName","email","mobileno","password","confirmPassword","Login","classes","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","handleShowPassword","prevShowPassword","dispatch","history","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","err","console","log","googleFailure","error","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\"\r\nimport './App.css'\r\nimport Nav from './Navbar'\r\nimport {Avatar,Button,Paper,Grid,Typography,Container, TextField} from '@material-ui/core'\r\nimport useStyles from './Style'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Input from './Input'\r\nimport Icon from './Icon'\r\nimport {GoogleLogin} from 'react-google-login'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {signin,signup} from './actions/auth'\r\nconst initialState={firstName:'',lastName:'',email:'',mobileno:'',password:'',confirmPassword:''}\r\n\r\nconst Login = () =>{\r\n\r\n  const classes=useStyles()\r\n  const [showPassword,setShowPassword]=useState(false)\r\n  const [isSignup,setIsSignup]=useState(false)\r\n  const [formData,setFormData]=useState(initialState)\r\n  const handleShowPassword=()=>setShowPassword((prevShowPassword)=>!prevShowPassword)\r\n  const dispatch=useDispatch()\r\n  const history=useHistory()\r\n\r\n  const handleSubmit=(e)=>{\r\n      e.preventDefault()\r\n      if(isSignup){\r\n        dispatch(signup(formData,history))\r\n      }else{\r\n        dispatch(signin(formData,history))\r\n      }\r\n  }\r\n\r\n  const handleChange=(e)=>{\r\n    setFormData({...formData, [e.target.name]:e.target.value})\r\n  }\r\n\r\n  const switchMode=()=>{\r\n    setIsSignup((prevIsSignup)=>!prevIsSignup)\r\n    setShowPassword(false)\r\n}\r\n\r\nconst googleSuccess=async(res)=>{\r\n  const result=res?.profileObj\r\n        const token=res?.tokenId\r\n\r\n        try{\r\n                dispatch({type:'AUTH',data:{result,token}})\r\n                history.push('/')\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n}\r\nconst googleFailure=(error)=>{\r\n  console.log(\"Google Sign In Failed, Try Agian Later\")\r\n  console.log(error)\r\n}\r\n  return(\r\n    <>\r\n    <Nav/>\r\n    <br/>\r\n    \r\n    <div className=\"form\">\r\n    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <AccountCircleIcon/>\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{isSignup?'Sign Up':'Sign In'}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              {\r\n                isSignup&&(\r\n                  <>\r\n                  <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half/>\r\n                  <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half/>\r\n                  </>\r\n                )\r\n              }\r\n              <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\"/>\r\n              { isSignup &&  <Input name=\"mobileno\" label=\"Contact Number\" handleChange={handleChange} type=\"text\"/>}\r\n              \r\n              <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword?\"text\":\"password\"} handleShowPassword={handleShowPassword}/>\r\n              { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\"/>}\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              \r\n            <Grid item xs={12}>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                {isSignup?'Sign Up':'Sign In'}\r\n            </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <GoogleLogin\r\n                        clientId=\"580463721095-cji152gg9b4iog5eaegvhq0hnol4e7lp.apps.googleusercontent.com\"\r\n                        render={(renderProps)=>(\r\n                            <Button \r\n                                className={classes.googleButton} \r\n                                color='primary' \r\n                                fullWidth \r\n                                onClick={renderProps.onClick} \r\n                                disabled={renderProps.disabled} \r\n                                startIcon={<Icon/>} \r\n                                variant=\"contained\">\r\n                                    Google Sign In\r\n                                </Button>\r\n                        )}\r\n\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy=\"single_host_origin\"\r\n                    />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Grid container justify='flex-end'>\r\n                        <Grid item>\r\n                            <Button onClick={switchMode}>\r\n                                {isSignup ? 'Already have an account? Sign In':'If not have account, Sign Up' }\r\n                            </Button>\r\n                        </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}