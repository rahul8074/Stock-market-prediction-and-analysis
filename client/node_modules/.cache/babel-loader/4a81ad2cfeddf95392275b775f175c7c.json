{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabIndicatorFoundation } from './foundation';\n/* istanbul ignore next: subclass is not a branch statement */\n\nvar MDCSlidingTabIndicatorFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCSlidingTabIndicatorFoundation, _super);\n\n  function MDCSlidingTabIndicatorFoundation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCSlidingTabIndicatorFoundation.prototype.activate = function (previousIndicatorClientRect) {\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect) {\n      this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n      return;\n    } // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n    // Calculate the dimensions based on the dimensions of the previous indicator\n\n\n    var currentClientRect = this.computeContentClientRect();\n    var widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    var xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter.setContentStyleProperty('transform', \"translateX(\" + xPosition + \"px) scaleX(\" + widthDelta + \")\"); // Force repaint before updating classes and transform to ensure the transform properly takes effect\n\n    this.computeContentClientRect();\n    this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n    this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    this.adapter.setContentStyleProperty('transform', '');\n  };\n\n  MDCSlidingTabIndicatorFoundation.prototype.deactivate = function () {\n    this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n  };\n\n  return MDCSlidingTabIndicatorFoundation;\n}(MDCTabIndicatorFoundation);\n\nexport { MDCSlidingTabIndicatorFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCSlidingTabIndicatorFoundation;","map":{"version":3,"sources":["sliding-foundation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;;AAEH,SAAQ,yBAAR,QAAwC,cAAxC;AAEA;;AACA,IAAA,gCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,SAAA,CAAA,gCAAA,EAAA,MAAA,CAAA;;AAAtD,WAAA,gCAAA,GAAA;;AAgCC;;AA/BC,EAAA,gCAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,2BAAT,EAAiD;AAC/C;AACA;AACA,QAAI,CAAC,2BAAL,EAAkC;AAChC,WAAK,OAAL,CAAa,QAAb,CAAsB,yBAAyB,CAAC,UAA1B,CAAqC,MAA3D;AACA;AACD,KAN8C,CAQ/C;AACA;AAEA;;;AACA,QAAM,iBAAiB,GAAG,KAAK,wBAAL,EAA1B;AACA,QAAM,UAAU,GAAG,2BAA2B,CAAC,KAA5B,GAAoC,iBAAiB,CAAC,KAAzE;AACA,QAAM,SAAS,GAAG,2BAA2B,CAAC,IAA5B,GAAmC,iBAAiB,CAAC,IAAvE;AACA,SAAK,OAAL,CAAa,QAAb,CAAsB,yBAAyB,CAAC,UAA1B,CAAqC,aAA3D;AACA,SAAK,OAAL,CAAa,uBAAb,CACI,WADJ,EACiB,gBAAc,SAAd,GAAuB,aAAvB,GAAqC,UAArC,GAA+C,GADhE,EAhB+C,CAmB/C;;AACA,SAAK,wBAAL;AAEA,SAAK,OAAL,CAAa,WAAb,CACI,yBAAyB,CAAC,UAA1B,CAAqC,aADzC;AAEA,SAAK,OAAL,CAAa,QAAb,CAAsB,yBAAyB,CAAC,UAA1B,CAAqC,MAA3D;AACA,SAAK,OAAL,CAAa,uBAAb,CAAqC,WAArC,EAAkD,EAAlD;AACD,GA1BD;;AA4BA,EAAA,gCAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,SAAK,OAAL,CAAa,WAAb,CAAyB,yBAAyB,CAAC,UAA1B,CAAqC,MAA9D;AACD,GAFD;;AAGF,SAAA,gCAAA;AAAC,CAhCD,CAAsD,yBAAtD,CAAA;;6CAkCA;;AACA,eAAe,gCAAf","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabIndicatorFoundation } from './foundation';\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCSlidingTabIndicatorFoundation = /** @class */ (function (_super) {\n    __extends(MDCSlidingTabIndicatorFoundation, _super);\n    function MDCSlidingTabIndicatorFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSlidingTabIndicatorFoundation.prototype.activate = function (previousIndicatorClientRect) {\n        // Early exit if no indicator is present to handle cases where an indicator\n        // may be activated without a prior indicator state\n        if (!previousIndicatorClientRect) {\n            this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n            return;\n        }\n        // This animation uses the FLIP approach. You can read more about it at the link below:\n        // https://aerotwist.com/blog/flip-your-animations/\n        // Calculate the dimensions based on the dimensions of the previous indicator\n        var currentClientRect = this.computeContentClientRect();\n        var widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n        var xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n        this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n        this.adapter.setContentStyleProperty('transform', \"translateX(\" + xPosition + \"px) scaleX(\" + widthDelta + \")\");\n        // Force repaint before updating classes and transform to ensure the transform properly takes effect\n        this.computeContentClientRect();\n        this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n        this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n        this.adapter.setContentStyleProperty('transform', '');\n    };\n    MDCSlidingTabIndicatorFoundation.prototype.deactivate = function () {\n        this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    };\n    return MDCSlidingTabIndicatorFoundation;\n}(MDCTabIndicatorFoundation));\nexport { MDCSlidingTabIndicatorFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSlidingTabIndicatorFoundation;\n//# sourceMappingURL=sliding-foundation.js.map"]},"metadata":{},"sourceType":"module"}