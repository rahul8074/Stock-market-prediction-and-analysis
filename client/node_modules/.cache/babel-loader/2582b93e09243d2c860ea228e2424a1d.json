{"ast":null,"code":"var _jsxFileName = \"D:\\\\PGR-project\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  label: {\n    display: 'block'\n  },\n  input: {\n    width: 300,\n    height: 40\n  },\n  listbox: {\n    width: 300,\n    margin: 0,\n    padding: 0,\n    zIndex: 1,\n    position: 'absolute',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 200,\n    border: '1px solid rgba(0,0,0,.25)',\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: '#4a8df6',\n      color: 'white',\n      cursor: 'pointer'\n    },\n    '& li:active': {\n      backgroundColor: '#2977f5',\n      color: 'white'\n    }\n  }\n}));\nexport default function UseAutocomplete() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions\n  } = useAutocomplete({\n    id: 'use-autocomplete-demo',\n    options: top100Films,\n    getOptionLabel: option => option.title\n  }); //Onsubmit\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:4000/users\", user).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginLeft: \"10px\",\n            marginBottom: \"5px\"\n          },\n          children: \"Enter Stock/Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.input,\n          ...getInputProps(),\n          placeholder: \"  NIFTY\",\n          name: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), groupedOptions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.listbox,\n      ...getListboxProps(),\n      children: groupedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", { ...getOptionProps({\n          option,\n          index\n        }),\n        children: option.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_s(UseAutocomplete, \"lwNgDwBIpOif+jI9oiBGXCtXpwI=\", false, function () {\n  return [useStyles, useAutocomplete];\n});\n\n_c = UseAutocomplete;\nconst top100Films = [{\n  title: 'psar'\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"UseAutocomplete\");","map":{"version":3,"sources":["D:/PGR-project/client/src/components/SearchBar.js"],"names":["React","useAutocomplete","makeStyles","useStyles","theme","label","display","input","width","height","listbox","margin","padding","zIndex","position","listStyle","backgroundColor","palette","background","paper","overflow","maxHeight","border","color","cursor","UseAutocomplete","classes","getRootProps","getInputLabelProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","id","options","top100Films","getOptionLabel","option","title","onSubmit","e","preventDefault","axios","post","user","then","response","console","log","catch","error","history","push","marginLeft","marginBottom","length","map","index","year"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  label: {\r\n    display: 'block',\r\n  },\r\n  input: {\r\n    width: 300,\r\n    height:40,\r\n  },\r\n  listbox: {\r\n    width: 300,\r\n    margin: 0,\r\n    padding: 0,\r\n    zIndex: 1,\r\n    position: 'absolute',\r\n    listStyle: 'none',\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n    maxHeight: 200,\r\n    border: '1px solid rgba(0,0,0,.25)',\r\n    '& li[data-focus=\"true\"]': {\r\n      backgroundColor: '#4a8df6',\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n    },\r\n    '& li:active': {\r\n      backgroundColor: '#2977f5',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UseAutocomplete() {\r\n  const classes = useStyles();\r\n  const {\r\n    getRootProps,\r\n    getInputLabelProps,\r\n    getInputProps,\r\n    getListboxProps,\r\n    getOptionProps,\r\n    groupedOptions,\r\n  } = useAutocomplete({\r\n    id: 'use-autocomplete-demo',\r\n    options: top100Films,\r\n    getOptionLabel: (option) => option.title,\r\n  });\r\n\r\n\r\n\r\n//Onsubmit\r\nconst onSubmit = async(e) => {\r\n    e.preventDefault();\r\n  \r\n    await axios.post(\"http://localhost:4000/users\",user)\r\n        .then(response =>{\r\n            console.log(response)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    history.push(\"/login\")\r\n     \r\n}\r\n \r\n\r\n  return (\r\n    <div>\r\n    <form  onSubmit={e =>onSubmit(e)}>\r\n      <div {...getRootProps()}>\r\n        <h4 style={{marginLeft:\"10px\",marginBottom:\"5px\"}} >Enter Stock/Symbol</h4>\r\n        <input className={classes.input} {...getInputProps()} placeholder=\"  NIFTY\" name=\"search\"  />\r\n        <button type=\"submit\" className=\"btn\" >Search</button>\r\n      </div>\r\n    </form>\r\n      {groupedOptions.length > 0 ? (\r\n        <ul className={classes.listbox} {...getListboxProps()}>\r\n          {groupedOptions.map((option, index) => (\r\n            <li {...getOptionProps({ option, index })}>{option.title}</li>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'psar'},\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}