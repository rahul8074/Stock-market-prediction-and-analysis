{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp-u\\\\Desktop\\\\PGR-project\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\"; //default base url\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:9000';\n\nfunction Search({\n  name,\n  setName\n}) {\n  _s();\n\n  const history = useHistory();\n  const [val, setVal] = useState([]);\n\n  const fetchData = async () => {\n    //fetching all details tablse of company\n    const result = await axios.get('/names/company');\n    setVal(result.data);\n  };\n\n  const items = [];\n  val.map((res, index) => items.push({\n    name: res.symbol\n  })); //console.log(\"items\",items)\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleOnSearch = (string, results) => {// onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n    //console.log(string, results)\n  };\n\n  const handleOnHover = result => {// the item hovered\n    // console.log(result)\n  };\n\n  const handleOnSelect = item => {\n    //history.push(`/data/adx`,{params: item.name})\n    //console.log(item.name)\n    setName(item.name);\n  };\n\n  const handleOnFocus = () => {// console.log('Focused')\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleOnSelect(),\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginBottom: \"5px\",\n            marginLeft: \"20px\",\n            color: 'black'\n          },\n          children: \" Enter stock/symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n          items: items,\n          onSearch: handleOnSearch,\n          onHover: handleOnHover,\n          onSelect: handleOnSelect,\n          onFocus: handleOnFocus,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"Y7QoK+10UVJ7yCyDHCyFO/KqBqQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/hp-u/Desktop/PGR-project/client/src/components/SearchBar.js"],"names":["React","useState","useEffect","ReactSearchAutocomplete","axios","useHistory","defaults","baseURL","Search","name","setName","history","val","setVal","fetchData","result","get","data","items","map","res","index","push","symbol","handleOnSearch","string","results","handleOnHover","handleOnSelect","item","handleOnFocus","e","width","marginBottom","marginLeft","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA0B,kBAA1B,C,CAGA;;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;;AAKA,SAASC,MAAT,CAAgB;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAhB,EAAgC;AAAA;;AAE9B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAK,CAACO,GAAD,EAAKC,MAAL,IAAeZ,QAAQ,CAAC,EAAD,CAA5B;;AAEF,QAAMa,SAAS,GAAG,YAAU;AAExB;AACA,UAAMC,MAAM,GAAE,MAAMX,KAAK,CAACY,GAAN,CAAU,gBAAV,CAApB;AACAH,IAAAA,MAAM,CAACE,MAAM,CAACE,IAAR,CAAN;AAEA,GANJ;;AASC,QAAMC,KAAK,GAAE,EAAb;AAECN,EAAAA,GAAG,CAACO,GAAJ,CAAQ,CAACC,GAAD,EAAKC,KAAL,KACNH,KAAK,CAACI,IAAN,CAAW;AAACb,IAAAA,IAAI,EAAEW,GAAG,CAACG;AAAX,GAAX,CADF,EAjB8B,CAqB/B;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,SAAS;AACV,GAFS,EAEP,EAFO,CAAT;;AAOC,QAAMU,cAAc,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB,CAC1C;AACA;AACA;AACD,GAJD;;AAMA,QAAMC,aAAa,GAAIZ,MAAD,IAAY,CAChC;AACD;AACA,GAHD;;AAKA,QAAMa,cAAc,GAAIC,IAAD,IAAU;AACzB;AACA;AACFnB,IAAAA,OAAO,CAACmB,IAAI,CAACpB,IAAN,CAAP;AAGC,GANP;;AAQA,QAAMqB,aAAa,GAAG,MAAM,CAC3B;AAIA,GALD;;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEC,CAAC,IAAEH,cAAc,EAAjC;AAAqC,IAAA,SAAS,EAAC,KAA/C;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,YAAY,EAAC,KAAd;AAAoBC,YAAAA,UAAU,EAAC,MAA/B;AAAsCC,YAAAA,KAAK,EAAC;AAA5C,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,uBAAD;AACE,UAAA,KAAK,EAAEjB,KADT;AAEE,UAAA,QAAQ,EAAEM,cAFZ;AAGE,UAAA,OAAO,EAAEG,aAHX;AAIE,UAAA,QAAQ,EAAEC,cAJZ;AAKE,UAAA,OAAO,EAAEE,aALX;AAME,UAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAlFQtB,M;UAESH,U;;;KAFTG,M;AAoFT,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n \r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\nimport axios from 'axios';\r\nimport { useHistory} from \"react-router-dom\";\r\n \r\n\r\n//default base url\r\naxios.defaults.baseURL = 'http://localhost:9000';\r\n\r\n\r\n\r\n\r\nfunction Search({name,setName}) {\r\n \r\n  const history = useHistory();\r\n   \r\n  const[val,setVal] = useState([])\r\n \r\nconst fetchData = async ()=>{\r\n  \r\n    //fetching all details tablse of company\r\n    const result= await axios.get('/names/company');\r\n    setVal(result.data)\r\n \r\n   }\r\n  \r\n\r\n const items =[]\r\n\r\n  val.map((res,index)=>(\r\n    items.push({name: res.symbol})\r\n   ))\r\n \r\n //console.log(\"items\",items)\r\n  \r\n\r\n\r\n useEffect(() => {\r\n  fetchData();\r\n}, []);\r\n\r\n \r\n   \r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    //console.log(string, results)\r\n  }\r\n\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n   // console.log(result)\r\n  }\r\n\r\n  const handleOnSelect = (item) => {\r\n          //history.push(`/data/adx`,{params: item.name})\r\n          //console.log(item.name)\r\n        setName(item.name)\r\n\r\n\r\n        }\r\n\r\n  const handleOnFocus = () => {\r\n   // console.log('Focused')\r\n    \r\n       \r\n      \r\n  }\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n  return (\r\n    <form onSubmit={e=>handleOnSelect()} className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div style={{ width: 400 }}>\r\n          <h4 style={{marginBottom:\"5px\",marginLeft:\"20px\",color:'black'}} > Enter stock/symbol</h4>\r\n          <ReactSearchAutocomplete\r\n            items={items}\r\n            onSearch={handleOnSearch}\r\n            onHover={handleOnHover}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      </header>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}