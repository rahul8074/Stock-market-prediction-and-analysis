{"ast":null,"code":"var _jsxFileName = \"D:\\\\my programs\\\\Praedico\\\\project\\\\client\\\\src\\\\LoginUserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getLoginList } from './Nodeservices';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from './UseTable';\nimport { Search } from \"@material-ui/icons\";\nimport { TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '75%'\n  }\n}));\nconst headCells = [{\n  id: 'name',\n  label: 'Name'\n}, {\n  id: 'email',\n  label: 'Email Address'\n}, {\n  id: 'date',\n  label: 'Date'\n}, {\n  id: 'time',\n  label: 'Time'\n}];\n\nconst LoginUserList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [getList, setList] = React.useState([]);\n\n  const fetchData = async () => {\n    var result = await getLoginList('userloginlist');\n    setList(result);\n    console.log(result);\n  };\n\n  React.useEffect(function () {\n    fetchData();\n  }, []);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(getList, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value == \"\") return items;else return items.filter(x => x.fullName.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  console.log(getList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Login List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Search Users\",\n            className: classes.searchInput,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 46\n              }, this)\n            },\n            onChange: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 34\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginUserList, \"QtN1Dk2zQNLqeYxx3GaJ7QKCfJs=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = LoginUserList;\nexport default LoginUserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginUserList\");","map":{"version":3,"sources":["D:/my programs/Praedico/project/client/src/LoginUserList.jsx"],"names":["React","useState","getLoginList","Paper","makeStyles","TableBody","TableRow","TableCell","Toolbar","InputAdornment","useTable","Search","TextField","useStyles","theme","pageContent","margin","spacing","padding","searchInput","width","headCells","id","label","LoginUserList","classes","getList","setList","fetchData","result","console","log","useEffect","filterFn","setFilterFn","fn","items","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","fullName","toLowerCase","includes","startAdornment","map","item","name","email","date","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,OAA5D,EAAqEC,cAArE,QAA2F,mBAA3F;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AACA,MAAMC,SAAS,GAAGT,UAAU,CAACU,KAAK,KAAK;AACnCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFA,GADsB;AAKnCE,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE;AALsB,CAAL,CAAN,CAA5B;AAWA,MAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADc,EAEd;AAAED,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFc,EAGd;AAAED,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAHc,EAId;AAAED,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAJc,CAAlB;;AAOA,MAAMC,aAAa,GAAC,MAAI;AAAA;;AAEpB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,OAAD,EAASC,OAAT,IAAkB3B,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;;AACA,QAAM2B,SAAS,GAAC,YAAS;AAEvB,QAAIC,MAAM,GAAC,MAAM3B,YAAY,CAAC,eAAD,CAA7B;AACAyB,IAAAA,OAAO,CAACE,MAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GALD;;AAMA7B,EAAAA,KAAK,CAACgC,SAAN,CAAgB,YAAU;AACxBJ,IAAAA,SAAS;AAEV,GAHD,EAGE,EAHF;AAKA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC;AAAEkC,IAAAA,EAAE,EAAEC,KAAK,IAAI;AAAE,aAAOA,KAAP;AAAe;AAAhC,GAAD,CAAxC;AAEA,QAAM;AACFC,IAAAA,YADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA;AAJE,MAKF9B,QAAQ,CAACgB,OAAD,EAAUL,SAAV,EAAqBY,QAArB,CALZ;;AAOA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIC,MAAM,GAAGD,CAAC,CAACC,MAAf;AACAT,IAAAA,WAAW,CAAC;AACRC,MAAAA,EAAE,EAAEC,KAAK,IAAI;AACT,YAAIO,MAAM,CAACC,KAAP,IAAgB,EAApB,EACI,OAAOR,KAAP,CADJ,KAGI,OAAOA,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCN,MAAM,CAACC,KAAzC,CAAlB,CAAP;AACP;AANO,KAAD,CAAX;AAQH,GAVD;;AAYAd,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,sBAAO;AAAA,4BACP;AAAA,6BACI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADO,eAMP;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAED,OAAO,CAACV,WAA1B;AAAA,gCAEY,QAAC,OAAD;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,KAAK,EAAC,cADV;AAEI,YAAA,SAAS,EAAEU,OAAO,CAACN,WAFvB;AAGI,YAAA,UAAU,EAAE;AACR+B,cAAAA,cAAc,eAAG,QAAC,cAAD;AAAgB,gBAAA,QAAQ,EAAC,OAAzB;AAAA,uCACb,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADa;AAAA;AAAA;AAAA;AAAA;AADT,aAHhB;AAQI,YAAA,QAAQ,EAAET;AARd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFZ,eAcY,QAAC,YAAD;AAAA,kCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAA,sBAEQD,4BAA4B,GAAGW,GAA/B,CAAmCC,IAAI,iBAClC,QAAC,QAAD;AAAA,sCACG,QAAC,SAAD;AAAA,0BAAYA,IAAI,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBADH,eAEG,QAAC,SAAD;AAAA,0BAAYD,IAAI,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAFH,eAGG,QAAC,SAAD;AAAA,0BAAYF,IAAI,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAHH,eAIG,QAAC,SAAD;AAAA,0BAAYH,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAJH;AAAA,eAAeJ,IAAI,CAAC9B,EAApB;AAAA;AAAA;AAAA;AAAA,oBADL;AAFR;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdZ,eA6BY,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBA7BZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YANO;AAAA,kBAAP;AAwCH,CA9ED;;GAAME,a;UAEcX,S,EAoBZH,Q;;;KAtBFc,a;AAgFN,eAAeA,aAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport {getLoginList} from './Nodeservices'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from './UseTable'\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { TextField } from '@material-ui/core';\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', label: 'Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'date', label: 'Date' },\r\n    { id: 'time', label: 'Time'},\r\n]\r\n\r\nconst LoginUserList=()=>{\r\n\r\n    const classes = useStyles();\r\n    const [getList,setList]=React.useState([])\r\n    const fetchData=async()=>{\r\n\r\n      var result=await getLoginList('userloginlist')\r\n      setList(result)\r\n      console.log(result)\r\n    }\r\n    React.useEffect(function(){\r\n      fetchData()\r\n\r\n    },[])\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(getList, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    console.log(getList)\r\n\r\n    return(<>\r\n    <div>\r\n        <center>\r\n            <h1>User Login List</h1>\r\n        </center>\r\n    </div>\r\n    <div>\r\n    <Paper className={classes.pageContent}>\r\n            \r\n                <Toolbar>\r\n                    <TextField\r\n                        label=\"Search Users\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.name}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.date}</TableCell>\r\n                                    <TableCell>{item.time}</TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n    </div>\r\n    </>)\r\n}\r\n\r\nexport default LoginUserList\r\n"]},"metadata":{},"sourceType":"module"}