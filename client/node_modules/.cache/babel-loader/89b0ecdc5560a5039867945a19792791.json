{"ast":null,"code":"var _jsxFileName = \"D:\\\\my programs\\\\Praedico\\\\project\\\\client\\\\src\\\\components\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  _s();\n\n  const label = props.date;\n  const category = props.category;\n  console.log(\"CHART WALI DATE\", props.date);\n  console.log(\"CHART WALI Category\", category);\n  const [maindate, setmaindate] = React.useState([]);\n  let datearr = [];\n  const data = props.data;\n  console.log(\"CHART WALA DATA\", data);\n  const ADX = props.adx;\n  const PlusDi = props.plusDi;\n  const MinusDi = props.minusDi;\n  console.log(\"ADX wala data\", ADX);\n  console.log(\"Plus DI wala\", PlusDi);\n  console.log(\"Minus wala\", MinusDi);\n  const Rsi = props.rsi;\n  console.log(\"RSI wala\", Rsi);\n  const MACD = props.macd;\n  const macdexp9 = props.macdexp9;\n  const macdhi = props.macdhi;\n  console.log(\"MACD data\", MACD);\n  console.log(\"MACDEXP9 wala\", macdexp9);\n  console.log(\"Histogram wala\", macdhi);\n  const MFI = props.mfi;\n  const CCI = props.cci;\n  console.log(\"MFI DATA\", MFI);\n  console.log(\"CCI data\", CCI);\n  const WR = props.wr;\n  const UB = props.ub;\n  const MB = props.mb;\n  const LB = props.lb;\n  const SK = props.sk;\n  const SD = props.sd;\n\n  if (category == 'psar') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'PSAR value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'adx') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'ADX value (LAST 50 days)',\n            data: ADX,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }, {\n            label: 'Plus DI value (LAST 50 days)',\n            data: PlusDi,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }, {\n            label: 'Minus Di value (LAST 50 days)',\n            data: MinusDi,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'rsi') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'RSI value (LAST 50 days)',\n            data: Rsi,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'macd') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'MACD value (LAST 50 days)',\n            data: MACD,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }, {\n            label: 'EXP(9) value (LAST 50 days)',\n            data: macdexp9,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }, {\n            type: 'bar',\n            label: 'MACD histogram value (LAST 50 days)',\n            data: macdhi,\n            backgroundColor: ['#273c75'],\n            borderColor: ['#192a56'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'mfi') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'MFI value (LAST 50 days)',\n            data: MFI,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'cci') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'CCI value (LAST 50 days)',\n            data: CCI,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'wr') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'WR value (LAST 50 days)',\n            data: WR,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'bb') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'Upper Bond value  (LAST 50 days)',\n            data: UB,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }, {\n            label: 'Middle Bond value  (LAST 50 days)',\n            data: MB,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }, {\n            label: 'Lower Bond value  (LAST 50 days)',\n            data: LB,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'stoch') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'Slow K value (LAST 50 days)',\n            data: SK,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }, {\n            label: 'Slow D value (LAST 50 days)',\n            data: SD,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'ichimoku') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Chart to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(\"h4\", {\n      children: \"No chart to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: label,\n        datasets: [{\n          label: 'PSAR value (LAST 50 days)',\n          data: data,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chart, \"UD1p/STR1q+qifE0j8vMMwsSss8=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/my programs/Praedico/project/client/src/components/Chart.jsx"],"names":["React","Line","Chart","props","label","date","category","console","log","maindate","setmaindate","useState","datearr","data","ADX","adx","PlusDi","plusDi","MinusDi","minusDi","Rsi","rsi","MACD","macd","macdexp9","macdhi","MFI","mfi","CCI","cci","WR","wr","UB","ub","MB","mb","LB","lb","SK","sk","SD","sd","labels","datasets","backgroundColor","borderColor","borderWidth","maintainAspectRatio","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;;AACA,MAAMC,KAAK,GAAEC,KAAD,IAAS;AAAA;;AACjB,QAAMC,KAAK,GAACD,KAAK,CAACE,IAAlB;AACA,QAAMC,QAAQ,GAACH,KAAK,CAACG,QAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BL,KAAK,CAACE,IAApC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,QAAlC;AAEA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAuBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA7B;AACA,MAAIC,OAAO,GAAC,EAAZ;AACA,QAAMC,IAAI,GAACV,KAAK,CAACU,IAAjB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BK,IAA9B;AACA,QAAMC,GAAG,GAACX,KAAK,CAACY,GAAhB;AACA,QAAMC,MAAM,GAACb,KAAK,CAACc,MAAnB;AACA,QAAMC,OAAO,GAACf,KAAK,CAACgB,OAApB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BM,GAA5B;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BQ,MAA3B;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBU,OAAzB;AACA,QAAME,GAAG,GAACjB,KAAK,CAACkB,GAAhB;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBY,GAAvB;AACA,QAAME,IAAI,GAACnB,KAAK,CAACoB,IAAjB;AACA,QAAMC,QAAQ,GAACrB,KAAK,CAACqB,QAArB;AACA,QAAMC,MAAM,GAACtB,KAAK,CAACsB,MAAnB;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBc,IAAxB;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BgB,QAA5B;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BiB,MAA7B;AAEA,QAAMC,GAAG,GAACvB,KAAK,CAACwB,GAAhB;AACA,QAAMC,GAAG,GAACzB,KAAK,CAAC0B,GAAhB;AAEAtB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBkB,GAAvB;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBoB,GAAvB;AAEA,QAAME,EAAE,GAAC3B,KAAK,CAAC4B,EAAf;AACA,QAAMC,EAAE,GAAC7B,KAAK,CAAC8B,EAAf;AACA,QAAMC,EAAE,GAAC/B,KAAK,CAACgC,EAAf;AACA,QAAMC,EAAE,GAACjC,KAAK,CAACkC,EAAf;AACA,QAAMC,EAAE,GAACnC,KAAK,CAACoC,EAAf;AACA,QAAMC,EAAE,GAACrC,KAAK,CAACsC,EAAf;;AAEA,MAAGnC,QAAQ,IAAE,MAAb,EACA;AAEI,wBAEI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,2BADA;AAEPS,YAAAA,IAAI,EAAEA,IAFC;AAGP+B,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD;AAFR,SADN;AA2BA,QAAA,MAAM,EAAE,GA3BR;AA4BA,QAAA,KAAK,EAAE,GA5BP;AA6BA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AA7BT;AAAA;AAAA;AAAA;AAAA;AADA,qBAFJ;AAuCH,GA1CD,MA2CK,IAAGzC,QAAQ,IAAE,KAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,0BADA;AAEPS,YAAAA,IAAI,EAAEC,GAFC;AAGP8B,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD,EAqBV;AACI1C,YAAAA,KAAK,EAAE,8BADX;AAEIS,YAAAA,IAAI,EAAEG,MAFV;AAGI4B,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WArBU,EA0CV;AACI1C,YAAAA,KAAK,EAAE,+BADX;AAEIS,YAAAA,IAAI,EAAEK,OAFV;AAGI0B,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WA1CU;AAFR,SADN;AAqEA,QAAA,MAAM,EAAE,GArER;AAsEA,QAAA,KAAK,EAAE,GAtEP;AAuEA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AAvET;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAgFH,GAnFI,MAoFA,IAAGzC,QAAQ,IAAE,KAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,0BADA;AAEPS,YAAAA,IAAI,EAAEO,GAFC;AAGPwB,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD;AAFR,SADN;AA2BA,QAAA,MAAM,EAAE,GA3BR;AA4BA,QAAA,KAAK,EAAE,GA5BP;AA6BA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AA7BT;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAsCH,GAzCI,MA0CA,IAAGzC,QAAQ,IAAE,MAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,2BADA;AAEPS,YAAAA,IAAI,EAAES,IAFC;AAGPsB,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD,EAqBV;AACI1C,YAAAA,KAAK,EAAE,6BADX;AAEIS,YAAAA,IAAI,EAAEW,QAFV;AAGIoB,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WArBU,EA0CV;AACIE,YAAAA,IAAI,EAAC,KADT;AAEI5C,YAAAA,KAAK,EAAE,qCAFX;AAGIS,YAAAA,IAAI,EAAEY,MAHV;AAIImB,YAAAA,eAAe,EAAE,CACb,SADa,CAJrB;AAOIC,YAAAA,WAAW,EAAE,CACT,SADS,CAPjB;AAUIC,YAAAA,WAAW,EAAE;AAVjB,WA1CU;AAFR,SADN;AA4DA,QAAA,MAAM,EAAE,GA5DR;AA6DA,QAAA,KAAK,EAAE,GA7DP;AA8DA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AA9DT;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAuEH,GA1EI,MA2EA,IAAGzC,QAAQ,IAAE,KAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,0BADA;AAEPS,YAAAA,IAAI,EAAEa,GAFC;AAGPkB,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD;AAFR,SADN;AA2BA,QAAA,MAAM,EAAE,GA3BR;AA4BA,QAAA,KAAK,EAAE,GA5BP;AA6BA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AA7BT;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAsCH,GAzCI,MA0CA,IAAGzC,QAAQ,IAAE,KAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,0BADA;AAEPS,YAAAA,IAAI,EAAEe,GAFC;AAGPgB,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD;AAFR,SADN;AA2BA,QAAA,MAAM,EAAE,GA3BR;AA4BA,QAAA,KAAK,EAAE,GA5BP;AA6BA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AA7BT;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAuCH,GA1CI,MA2CA,IAAGzC,QAAQ,IAAE,IAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,yBADA;AAEPS,YAAAA,IAAI,EAAEiB,EAFC;AAGPc,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD;AAFR,SADN;AA2BA,QAAA,MAAM,EAAE,GA3BR;AA4BA,QAAA,KAAK,EAAE,GA5BP;AA6BA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AA7BT;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAuCH,GA1CI,MA2CA,IAAGzC,QAAQ,IAAE,IAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,kCADA;AAEPS,YAAAA,IAAI,EAAEmB,EAFC;AAGPY,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD,EAqBV;AACI1C,YAAAA,KAAK,EAAE,mCADX;AAEIS,YAAAA,IAAI,EAAEqB,EAFV;AAGIU,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WArBU,EA0CV;AACI1C,YAAAA,KAAK,EAAE,kCADX;AAEIS,YAAAA,IAAI,EAAEuB,EAFV;AAGIQ,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WA1CU;AAFR,SADN;AAqEA,QAAA,MAAM,EAAE,GArER;AAsEA,QAAA,KAAK,EAAE,GAtEP;AAuEA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AAvET;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAgFH,GAnFI,MAoFA,IAAGzC,QAAQ,IAAE,OAAb,EACL;AAEI,wBACI;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAE;AACFoC,UAAAA,MAAM,EAAEtC,KADN;AAEFuC,UAAAA,QAAQ,EAAE,CAAC;AACPvC,YAAAA,KAAK,EAAE,6BADA;AAEPS,YAAAA,IAAI,EAAEyB,EAFC;AAGPM,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD,EAqBV;AACI1C,YAAAA,KAAK,EAAE,6BADX;AAEIS,YAAAA,IAAI,EAAE2B,EAFV;AAGII,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHrB;AAWIC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXjB;AAmBIC,YAAAA,WAAW,EAAE;AAnBjB,WArBU;AAFR,SADN;AAgDA,QAAA,MAAM,EAAE,GAhDR;AAiDA,QAAA,KAAK,EAAE,GAjDP;AAkDA,QAAA,OAAO,EAAE;AACLC,UAAAA,mBAAmB,EAAC;AADf;AAlDT;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AA2DH,GA9DI,MA+DA,IAAGzC,QAAQ,IAAE,UAAb,EACL;AAEI,wBACI;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAMH,GATI,MAUD;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAED,sBACI;AAAA,2BACA,QAAC,IAAD;AACA,MAAA,IAAI,EAAE;AACFoC,QAAAA,MAAM,EAAEtC,KADN;AAEFuC,QAAAA,QAAQ,EAAE,CAAC;AACPvC,UAAAA,KAAK,EAAE,2BADA;AAEPS,UAAAA,IAAI,EAAEA,IAFC;AAGP+B,UAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,UAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,UAAAA,WAAW,EAAE;AAnBN,SAAD;AAFR,OADN;AA2BA,MAAA,MAAM,EAAE,GA3BR;AA4BA,MAAA,KAAK,EAAE,GA5BP;AA6BA,MAAA,OAAO,EAAE;AACLC,QAAAA,mBAAmB,EAAC;AADf;AA7BT;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAwCH,CAnmBD;;GAAM7C,K;;KAAAA,K;AAqmBN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nconst Chart=(props)=>{\r\n    const label=props.date\r\n    const category=props.category\r\n    console.log(\"CHART WALI DATE\",props.date)\r\n    console.log(\"CHART WALI Category\",category)\r\n\r\n    const [maindate,setmaindate]=React.useState([])\r\n    let datearr=[]\r\n    const data=props.data\r\n    console.log(\"CHART WALA DATA\",data)\r\n    const ADX=props.adx\r\n    const PlusDi=props.plusDi\r\n    const MinusDi=props.minusDi\r\n    console.log(\"ADX wala data\",ADX)\r\n    console.log(\"Plus DI wala\",PlusDi)\r\n    console.log(\"Minus wala\",MinusDi)\r\n    const Rsi=props.rsi\r\n    console.log(\"RSI wala\",Rsi)\r\n    const MACD=props.macd\r\n    const macdexp9=props.macdexp9\r\n    const macdhi=props.macdhi\r\n    console.log(\"MACD data\",MACD)\r\n    console.log(\"MACDEXP9 wala\",macdexp9)\r\n    console.log(\"Histogram wala\",macdhi)\r\n\r\n    const MFI=props.mfi \r\n    const CCI=props.cci\r\n\r\n    console.log(\"MFI DATA\",MFI)\r\n    console.log(\"CCI data\",CCI)\r\n\r\n    const WR=props.wr \r\n    const UB=props.ub \r\n    const MB=props.mb\r\n    const LB=props.lb\r\n    const SK=props.sk\r\n    const SD=props.sd\r\n\r\n    if(category=='psar')\r\n    {\r\n\r\n        return(\r\n            \r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'PSAR value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='adx')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'ADX value (LAST 50 days)',\r\n                    data: ADX,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    label: 'Plus DI value (LAST 50 days)',\r\n                    data: PlusDi,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    label: 'Minus Di value (LAST 50 days)',\r\n                    data: MinusDi,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='rsi')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'RSI value (LAST 50 days)',\r\n                    data: Rsi,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='macd')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'MACD value (LAST 50 days)',\r\n                    data: MACD,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    label: 'EXP(9) value (LAST 50 days)',\r\n                    data: macdexp9,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    type:'bar',\r\n                    label: 'MACD histogram value (LAST 50 days)',\r\n                    data: macdhi,\r\n                    backgroundColor: [\r\n                        '#273c75'\r\n                    ],\r\n                    borderColor: [\r\n                        '#192a56'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='mfi')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'MFI value (LAST 50 days)',\r\n                    data: MFI,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='cci')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'CCI value (LAST 50 days)',\r\n                    data: CCI,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n\r\n    }\r\n    else if(category=='wr')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'WR value (LAST 50 days)',\r\n                    data: WR,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n\r\n    }\r\n    else if(category=='bb')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'Upper Bond value  (LAST 50 days)',\r\n                    data: UB,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    label: 'Middle Bond value  (LAST 50 days)',\r\n                    data: MB,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    label: 'Lower Bond value  (LAST 50 days)',\r\n                    data: LB,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='stoch')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'Slow K value (LAST 50 days)',\r\n                    data: SK,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    label: 'Slow D value (LAST 50 days)',\r\n                    data: SD,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='ichimoku')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <h3>No Chart to display</h3>\r\n            </>\r\n        )\r\n\r\n    }\r\n    else{\r\n        <h4>No chart to display</h4>\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Line\r\n        data={{\r\n            labels: label,\r\n            datasets: [{\r\n                label: 'PSAR value (LAST 50 days)',\r\n                data: data,\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1\r\n            },\r\n            \r\n        ]\r\n        }}\r\n        height={400}\r\n        width={600}\r\n        options={{\r\n            maintainAspectRatio:false\r\n        }}\r\n        />\r\n        </>\r\n        \r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default Chart"]},"metadata":{},"sourceType":"module"}