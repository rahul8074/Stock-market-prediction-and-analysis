{"ast":null,"code":"var _jsxFileName = \"D:\\\\my programs\\\\Praedico\\\\project\\\\client\\\\src\\\\paymentusertable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getUserListforPayment2, upData } from './Nodeservices';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from './UseTable';\nimport { Search } from \"@material-ui/icons\";\nimport { TextField } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '75%'\n  }\n}));\nconst headCells = [{\n  id: 'name',\n  label: 'Name'\n}, {\n  id: 'email',\n  label: 'Email Address'\n}, {\n  id: 'mobile',\n  label: 'Mobile No.'\n}, {\n  id: 'payment',\n  label: 'Payment Status'\n}];\n\nconst PaymentUserTable = () => {\n  _s();\n\n  const classes = useStyles();\n  const [getList1, setList1] = React.useState([]);\n\n  const fetchData = async () => {\n    var result = await getUserListforPayment2('userlistforpayment2');\n    setList1(result);\n    console.log(result);\n  };\n\n  React.useEffect(function () {\n    fetchData();\n  }, []);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(getList1, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value == \"\") return items;else return items.filter(x => x.name.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  const updateStatus = async event => {\n    console.log(event);\n    const id = event;\n    var result = await upData('updatepaymentstatus', id);\n    fetchData();\n  };\n\n  console.log(getList1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.pageContent,\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Search Users\",\n            className: classes.searchInput,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 42\n              }, this)\n            },\n            onChange: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.mobile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    endIcon: /*#__PURE__*/_jsxDEV(CreditCardIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 50\n                    }, this),\n                    onClick: () => updateStatus(item.email),\n                    children: \"Paid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 47\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 30\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaymentUserTable, \"ksoz1Supl1fJffyXiKocbb80X1M=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = PaymentUserTable;\nexport default PaymentUserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentUserTable\");","map":{"version":3,"sources":["D:/my programs/Praedico/project/client/src/paymentusertable.jsx"],"names":["React","useState","getUserListforPayment2","upData","Paper","makeStyles","TableBody","TableRow","TableCell","Toolbar","InputAdornment","useTable","Search","TextField","Typography","Switch","Grid","CheckCircleIcon","CreditCardIcon","Button","useStyles","theme","pageContent","margin","spacing","padding","searchInput","width","headCells","id","label","PaymentUserTable","classes","getList1","setList1","fetchData","result","console","log","useEffect","filterFn","setFilterFn","fn","items","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","name","toLowerCase","includes","updateStatus","event","startAdornment","map","item","email","mobile"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport {getUserListforPayment2,upData} from './Nodeservices'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport useTable from './UseTable'\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { TextField } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'name', label: 'Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'mobile', label: 'Mobile No.' },\r\n    { id: 'payment', label: 'Payment Status'},\r\n]\r\n\r\nconst PaymentUserTable=()=>{\r\n\r\n    \r\n\t  \r\n\r\n    const classes = useStyles();\r\n    const [getList1,setList1]=React.useState([])\r\n   \r\n\r\n    const fetchData=async()=>{\r\n\r\n      var result=await getUserListforPayment2('userlistforpayment2')\r\n\r\n\r\n      setList1(result)\r\n      console.log(result)\r\n    }\r\n    React.useEffect(function(){\r\n      fetchData()\r\n\r\n    },[])\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(getList1, headCells, filterFn);\r\n\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const updateStatus=async(event)=>{\r\n        console.log(event)\r\n        const id=event\r\n        var result=await upData('updatepaymentstatus',id)\r\n        fetchData()\r\n\r\n    }\r\n\r\n    \r\n\r\n    console.log(getList1)\r\n\r\n    return(<>\r\n    \r\n        <div>\r\n        \r\n        <Paper className={classes.pageContent}>\r\n            \r\n            <Toolbar>\r\n                <TextField\r\n                    label=\"Search Users\"\r\n                    className={classes.searchInput}\r\n                    InputProps={{\r\n                        startAdornment: (<InputAdornment position=\"start\">\r\n                            <Search />\r\n                        </InputAdornment>)\r\n                    }}\r\n                    onChange={handleSearch}\r\n                />\r\n            </Toolbar>\r\n            <TblContainer>\r\n                <TblHead />\r\n                <TableBody>\r\n                    {\r\n                        recordsAfterPagingAndSorting().map(item =>\r\n                            (<TableRow key={item.id}>\r\n                                <TableCell><b>{item.name}</b></TableCell>\r\n                                <TableCell><b>{item.email}</b></TableCell>\r\n                                <TableCell><b>{item.mobile}</b></TableCell>\r\n                                <TableCell><b><Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        endIcon={<CreditCardIcon/>}\r\n                                        onClick={()=>updateStatus(item.email)}\r\n                                    >\r\n                                        Paid\r\n                                    </Button></b>\r\n                                    </TableCell>\r\n                            </TableRow>)\r\n                        )\r\n                    }\r\n                </TableBody>\r\n            </TblContainer>\r\n            <TblPagination />\r\n        </Paper>\r\n        \r\n    \r\n    </div>\r\n    \r\n\r\n    </>)\r\n    \r\n}\r\n\r\nexport default PaymentUserTable"]},"metadata":{},"sourceType":"module"}