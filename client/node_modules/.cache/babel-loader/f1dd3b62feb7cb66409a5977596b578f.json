{"ast":null,"code":"var _jsxFileName = \"D:\\\\my programs\\\\Praedico\\\\project\\\\client\\\\src\\\\components\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  _s();\n\n  const label = props.date;\n  const category = props.category;\n  console.log(\"CHART WALI DATE\", props.date);\n  console.log(\"CHART WALI Category\", category);\n  const [maindate, setmaindate] = React.useState([]);\n  let datearr = [];\n  const data = props.data;\n  console.log(\"CHART WALA DATA\", data);\n\n  if (category == 'psar') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'PSAR value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'adx') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'ADX value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'rsi') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'RSI value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'macd') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'MACD value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'mfi') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'MFI value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'cci') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'CCI value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'wr') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'WR value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'bb') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'BB value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'stoch') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'Stoch value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else if (category == 'ichimoku') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: label,\n          datasets: [{\n            label: 'ichimoku value (LAST 50 days)',\n            data: data,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        width: 600,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(\"h4\", {\n      children: \"No chart to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: label,\n        datasets: [{\n          label: 'PSAR value (LAST 50 days)',\n          data: data,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chart, \"UD1p/STR1q+qifE0j8vMMwsSss8=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/my programs/Praedico/project/client/src/components/Chart.jsx"],"names":["React","Line","Chart","props","label","date","category","console","log","maindate","setmaindate","useState","datearr","data","labels","datasets","backgroundColor","borderColor","borderWidth","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\nconst Chart=(props)=>{\r\n    const label=props.date\r\n    const category=props.category\r\n    console.log(\"CHART WALI DATE\",props.date)\r\n    console.log(\"CHART WALI Category\",category)\r\n\r\n    const [maindate,setmaindate]=React.useState([])\r\n    let datearr=[]\r\n    const data=props.data\r\n    console.log(\"CHART WALA DATA\",data)\r\n\r\n    if(category=='psar')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'PSAR value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='adx')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'ADX value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='rsi')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'RSI value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='macd')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'MACD value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='mfi')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'MFI value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='cci')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'CCI value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n\r\n    }\r\n    else if(category=='wr')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'WR value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n\r\n    }\r\n    else if(category=='bb')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'BB value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='stoch')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'Stoch value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else if(category=='ichimoku')\r\n    {\r\n\r\n        return(\r\n            <>\r\n            <Line\r\n            data={{\r\n                labels: label,\r\n                datasets: [{\r\n                    label: 'ichimoku value (LAST 50 days)',\r\n                    data: data,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                \r\n            ]\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio:false\r\n            }}\r\n            />\r\n            </>\r\n        )\r\n\r\n    }\r\n    else{\r\n        <h4>No chart to display</h4>\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Line\r\n        data={{\r\n            labels: label,\r\n            datasets: [{\r\n                label: 'PSAR value (LAST 50 days)',\r\n                data: data,\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1\r\n            },\r\n            \r\n        ]\r\n        }}\r\n        height={400}\r\n        width={600}\r\n        options={{\r\n            maintainAspectRatio:false\r\n        }}\r\n        />\r\n        </>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default Chart"]},"metadata":{},"sourceType":"module"}