{"ast":null,"code":"var _jsxFileName = \"D:\\\\PGR-project\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport './Style/SearchBar.css';\nimport Grid from '@material-ui/core/Grid'; //default base url\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:9000';\n\nfunction Search({\n  name,\n  setName\n}) {\n  _s();\n\n  const history = useHistory();\n  const [val, setVal] = useState([]);\n\n  const fetchData = async () => {\n    //fetching all details tablse of company\n    const result = await axios.get('/names/company');\n    setVal(result.data);\n  };\n\n  const items = [];\n  val.map((res, index) => items.push({\n    name: res.symbol\n  })); //console.log(\"items\",items)\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleOnSearch = (string, results) => {\n    // onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n    //console.log(string, results)\n    if (string == \"\") {\n      setName(\"\");\n    }\n  };\n\n  const handleOnHover = result => {// the item hovered\n    // console.log(result)\n  };\n\n  const handleOnSelect = item => {\n    //history.push(`/data/adx`,{params: item.name})\n    //console.log(item.name)\n    setName(item.name);\n    history.push(\"/data/psar\");\n  };\n\n  const handleOnFocus = () => {// console.log('Focused')\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleOnSelect(),\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 400\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: \"5px\",\n                marginLeft: \"20px\",\n                color: '#2c3e50'\n              },\n              children: \" Enter stock/symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ReactSearchAutocomplete, {\n              items: items,\n              onSearch: handleOnSearch,\n              onHover: handleOnHover,\n              onSelect: handleOnSelect,\n              onFocus: handleOnFocus,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"Y7QoK+10UVJ7yCyDHCyFO/KqBqQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/PGR-project/client/src/components/SearchBar.js"],"names":["React","useState","useEffect","ReactSearchAutocomplete","axios","useHistory","Grid","defaults","baseURL","Search","name","setName","history","val","setVal","fetchData","result","get","data","items","map","res","index","push","symbol","handleOnSearch","string","results","handleOnHover","handleOnSelect","item","handleOnFocus","e","width","marginBottom","marginLeft","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n \r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\nimport axios from 'axios';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport './Style/SearchBar.css'\r\nimport Grid from '@material-ui/core/Grid';\r\n//default base url\r\naxios.defaults.baseURL = 'http://localhost:9000';\r\n\r\n\r\n\r\n\r\nfunction Search({name,setName}) {\r\n \r\n  const history = useHistory();\r\n   \r\n  const[val,setVal] = useState([])\r\n \r\nconst fetchData = async ()=>{\r\n  \r\n    //fetching all details tablse of company\r\n    const result= await axios.get('/names/company');\r\n    setVal(result.data)\r\n \r\n   }\r\n  \r\n\r\n const items =[]\r\n\r\n  val.map((res,index)=>(\r\n    items.push({name: res.symbol})\r\n   ))\r\n \r\n //console.log(\"items\",items)\r\n  \r\n\r\n\r\n useEffect(() => {\r\n  fetchData();\r\n}, []);\r\n\r\n \r\n   \r\n\r\n  const handleOnSearch = (string, results) => {\r\n    // onSearch will have as the first callback parameter\r\n    // the string searched and for the second the results.\r\n    //console.log(string, results)\r\n    if(string==\"\"){\r\n      setName(\"\");\r\n    }\r\n  }\r\n\r\n  const handleOnHover = (result) => {\r\n    // the item hovered\r\n   // console.log(result)\r\n  }\r\n\r\n  const handleOnSelect = (item) => {\r\n          //history.push(`/data/adx`,{params: item.name})\r\n          //console.log(item.name)\r\n        setName(item.name);\r\n        history.push(\"/data/psar\");\r\n\r\n        }\r\n\r\n  const handleOnFocus = () => {\r\n   // console.log('Focused')\r\n    \r\n       \r\n      \r\n  }\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n        <form onSubmit={e=>handleOnSelect()} className=\"App\">\r\n    <br />\r\n      <header className=\"App-header\" >\r\n        <div style={{ width: 400 }}>\r\n          <h3 style={{marginBottom:\"5px\",marginLeft:\"20px\",color:'#2c3e50'}} > Enter stock/symbol</h3>\r\n          <ReactSearchAutocomplete\r\n            items={items}\r\n            onSearch={handleOnSearch}\r\n            onHover={handleOnHover}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      </header>\r\n    </form>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}